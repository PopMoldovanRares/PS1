
ProiectSincretic.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  00000e32  00000ec6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e32  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001e  0080010a  0080010a  00000ed0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000ed0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000f2c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000160  00000000  00000000  00000f6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ede  00000000  00000000  000010cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a71  00000000  00000000  00001faa  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b2e  00000000  00000000  00002a1b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002ac  00000000  00000000  0000354c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000053d  00000000  00000000  000037f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002aa  00000000  00000000  00003d35  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000100  00000000  00000000  00003fdf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  2c:	0c 94 f3 01 	jmp	0x3e6	; 0x3e6 <__vector_11>
  30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  40:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  48:	0c 94 40 02 	jmp	0x480	; 0x480 <__vector_18>
  4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  50:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  68:	31 01       	movw	r6, r2
  6a:	34 01       	movw	r6, r8
  6c:	37 01       	movw	r6, r14
  6e:	3a 01       	movw	r6, r20
  70:	3d 01       	movw	r6, r26
  72:	40 01       	movw	r8, r0
  74:	43 01       	movw	r8, r6
  76:	46 01       	movw	r8, r12
  78:	49 01       	movw	r8, r18
  7a:	4c 01       	movw	r8, r24

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d8 e0       	ldi	r29, 0x08	; 8
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
  88:	11 e0       	ldi	r17, 0x01	; 1
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b1 e0       	ldi	r27, 0x01	; 1
  8e:	e2 e3       	ldi	r30, 0x32	; 50
  90:	fe e0       	ldi	r31, 0x0E	; 14
  92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
  94:	05 90       	lpm	r0, Z+
  96:	0d 92       	st	X+, r0
  98:	aa 30       	cpi	r26, 0x0A	; 10
  9a:	b1 07       	cpc	r27, r17
  9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
  9e:	21 e0       	ldi	r18, 0x01	; 1
  a0:	aa e0       	ldi	r26, 0x0A	; 10
  a2:	b1 e0       	ldi	r27, 0x01	; 1
  a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
  a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
  a8:	a8 32       	cpi	r26, 0x28	; 40
  aa:	b2 07       	cpc	r27, r18
  ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
  ae:	0e 94 c9 01 	call	0x392	; 0x392 <main>
  b2:	0c 94 17 07 	jmp	0xe2e	; 0xe2e <_exit>

000000b6 <__bad_interrupt>:
  b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <adc_init>:
 char output[10];

void adc_init()
{
	//selectare factor de divizare 128
	ADCSRA |= ((1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0));
  ba:	ea e7       	ldi	r30, 0x7A	; 122
  bc:	f0 e0       	ldi	r31, 0x00	; 0
  be:	80 81       	ld	r24, Z
  c0:	87 60       	ori	r24, 0x07	; 7
  c2:	80 83       	st	Z, r24
	//AVCC cu capacitor extern
	ADMUX |= 1<<REFS0;
  c4:	ac e7       	ldi	r26, 0x7C	; 124
  c6:	b0 e0       	ldi	r27, 0x00	; 0
  c8:	8c 91       	ld	r24, X
  ca:	80 64       	ori	r24, 0x40	; 64
  cc:	8c 93       	st	X, r24
	//permite caract ADC
	ADCSRA |= 1<<ADEN;
  ce:	80 81       	ld	r24, Z
  d0:	80 68       	ori	r24, 0x80	; 128
  d2:	80 83       	st	Z, r24
	//start conversie
	ADCSRA |= 1<<ADSC;
  d4:	80 81       	ld	r24, Z
  d6:	80 64       	ori	r24, 0x40	; 64
  d8:	80 83       	st	Z, r24
  da:	08 95       	ret

000000dc <read_adc>:

}

uint16_t read_adc(uint8_t channel)
{
	ADMUX &= 0xF0;  //set input AO to A5
  dc:	ec e7       	ldi	r30, 0x7C	; 124
  de:	f0 e0       	ldi	r31, 0x00	; 0
  e0:	90 81       	ld	r25, Z
  e2:	90 7f       	andi	r25, 0xF0	; 240
  e4:	90 83       	st	Z, r25
	ADMUX |= channel; //select chanel AO to A5
  e6:	90 81       	ld	r25, Z
  e8:	89 2b       	or	r24, r25
  ea:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADSC);  //start conversion
  ec:	ea e7       	ldi	r30, 0x7A	; 122
  ee:	f0 e0       	ldi	r31, 0x00	; 0
  f0:	80 81       	ld	r24, Z
  f2:	80 64       	ori	r24, 0x40	; 64
  f4:	80 83       	st	Z, r24
	while(ADCSRA & (1<<ADSC)) ;//wait wile adc conversion are not updated
  f6:	80 81       	ld	r24, Z
  f8:	86 fd       	sbrc	r24, 6
  fa:	fd cf       	rjmp	.-6      	; 0xf6 <read_adc+0x1a>
	return ADCW;
  fc:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 100:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
}
 104:	08 95       	ret

00000106 <temperatura_celsius>:

float temperatura_celsius()
{
	adc_init();
 106:	0e 94 5d 00 	call	0xba	; 0xba <adc_init>
	reading=read_adc(0);
 10a:	80 e0       	ldi	r24, 0x00	; 0
 10c:	0e 94 6e 00 	call	0xdc	; 0xdc <read_adc>
 110:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <reading+0x1>
 114:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <reading>
	voltage=reading*5.0;
 118:	bc 01       	movw	r22, r24
 11a:	99 0f       	add	r25, r25
 11c:	88 0b       	sbc	r24, r24
 11e:	99 0b       	sbc	r25, r25
 120:	0e 94 17 03 	call	0x62e	; 0x62e <__floatsisf>
 124:	20 e0       	ldi	r18, 0x00	; 0
 126:	30 e0       	ldi	r19, 0x00	; 0
 128:	40 ea       	ldi	r20, 0xA0	; 160
 12a:	50 e4       	ldi	r21, 0x40	; 64
 12c:	0e 94 cc 03 	call	0x798	; 0x798 <__mulsf3>
	voltage/=1024.0;
 130:	20 e0       	ldi	r18, 0x00	; 0
 132:	30 e0       	ldi	r19, 0x00	; 0
 134:	40 e8       	ldi	r20, 0x80	; 128
 136:	5a e3       	ldi	r21, 0x3A	; 58
 138:	0e 94 cc 03 	call	0x798	; 0x798 <__mulsf3>
 13c:	60 93 0e 01 	sts	0x010E, r22	; 0x80010e <voltage>
 140:	70 93 0f 01 	sts	0x010F, r23	; 0x80010f <voltage+0x1>
 144:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <voltage+0x2>
 148:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <voltage+0x3>
	temperatureCelsius=(voltage-0.5)*100;
 14c:	20 e0       	ldi	r18, 0x00	; 0
 14e:	30 e0       	ldi	r19, 0x00	; 0
 150:	40 e0       	ldi	r20, 0x00	; 0
 152:	5f e3       	ldi	r21, 0x3F	; 63
 154:	0e 94 6d 02 	call	0x4da	; 0x4da <__subsf3>
 158:	20 e0       	ldi	r18, 0x00	; 0
 15a:	30 e0       	ldi	r19, 0x00	; 0
 15c:	48 ec       	ldi	r20, 0xC8	; 200
 15e:	52 e4       	ldi	r21, 0x42	; 66
 160:	0e 94 cc 03 	call	0x798	; 0x798 <__mulsf3>
 164:	60 93 0a 01 	sts	0x010A, r22	; 0x80010a <__data_end>
 168:	70 93 0b 01 	sts	0x010B, r23	; 0x80010b <__data_end+0x1>
 16c:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <__data_end+0x2>
 170:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <__data_end+0x3>
	return temperatureCelsius;
	//sprintf(temperatureCelsius,"temp: %d\n");
}
 174:	08 95       	ret

00000176 <control_Led_temp>:

float temp;

void control_Led_temp()
{
 176:	cf 92       	push	r12
 178:	df 92       	push	r13
 17a:	ef 92       	push	r14
 17c:	ff 92       	push	r15
	temp = temperatura_celsius();
 17e:	0e 94 83 00 	call	0x106	; 0x106 <temperatura_celsius>
 182:	6b 01       	movw	r12, r22
 184:	7c 01       	movw	r14, r24
 186:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <temp>
 18a:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <temp+0x1>
 18e:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <temp+0x2>
 192:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <temp+0x3>
	if(temp > 35)
 196:	20 e0       	ldi	r18, 0x00	; 0
 198:	30 e0       	ldi	r19, 0x00	; 0
 19a:	4c e0       	ldi	r20, 0x0C	; 12
 19c:	52 e4       	ldi	r21, 0x42	; 66
 19e:	0e 94 c7 03 	call	0x78e	; 0x78e <__gesf2>
 1a2:	18 16       	cp	r1, r24
 1a4:	14 f4       	brge	.+4      	; 0x1aa <control_Led_temp+0x34>
	{
		PORTB |= 0x08;
 1a6:	2b 9a       	sbi	0x05, 3	; 5
 1a8:	0b c0       	rjmp	.+22     	; 0x1c0 <control_Led_temp+0x4a>
	} 
	else if(temp <= 35)
 1aa:	20 e0       	ldi	r18, 0x00	; 0
 1ac:	30 e0       	ldi	r19, 0x00	; 0
 1ae:	4c e0       	ldi	r20, 0x0C	; 12
 1b0:	52 e4       	ldi	r21, 0x42	; 66
 1b2:	c7 01       	movw	r24, r14
 1b4:	b6 01       	movw	r22, r12
 1b6:	0e 94 da 02 	call	0x5b4	; 0x5b4 <__cmpsf2>
 1ba:	18 16       	cp	r1, r24
 1bc:	0c f0       	brlt	.+2      	; 0x1c0 <control_Led_temp+0x4a>
	{
		PORTB &=~(0x08);
 1be:	2b 98       	cbi	0x05, 3	; 5
	}
}
 1c0:	ff 90       	pop	r15
 1c2:	ef 90       	pop	r14
 1c4:	df 90       	pop	r13
 1c6:	cf 90       	pop	r12
 1c8:	08 95       	ret

000001ca <afisare_temp>:

void afisare_temp()
{
	int temperatura = (int) temp;
 1ca:	60 91 22 01 	lds	r22, 0x0122	; 0x800122 <temp>
 1ce:	70 91 23 01 	lds	r23, 0x0123	; 0x800123 <temp+0x1>
 1d2:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <temp+0x2>
 1d6:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <temp+0x3>
 1da:	0e 94 df 02 	call	0x5be	; 0x5be <__fixsfsi>
	
	sprintf(output,"temp %d\n",temperatura);
 1de:	7f 93       	push	r23
 1e0:	6f 93       	push	r22
 1e2:	80 e0       	ldi	r24, 0x00	; 0
 1e4:	91 e0       	ldi	r25, 0x01	; 1
 1e6:	9f 93       	push	r25
 1e8:	8f 93       	push	r24
 1ea:	88 e1       	ldi	r24, 0x18	; 24
 1ec:	91 e0       	ldi	r25, 0x01	; 1
 1ee:	9f 93       	push	r25
 1f0:	8f 93       	push	r24
 1f2:	0e 94 3f 04 	call	0x87e	; 0x87e <sprintf>
	USART_citire(output,10);
 1f6:	6a e0       	ldi	r22, 0x0A	; 10
 1f8:	88 e1       	ldi	r24, 0x18	; 24
 1fa:	91 e0       	ldi	r25, 0x01	; 1
 1fc:	0e 94 24 02 	call	0x448	; 0x448 <USART_citire>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 200:	2f ef       	ldi	r18, 0xFF	; 255
 202:	88 e0       	ldi	r24, 0x08	; 8
 204:	9d e3       	ldi	r25, 0x3D	; 61
 206:	21 50       	subi	r18, 0x01	; 1
 208:	80 40       	sbci	r24, 0x00	; 0
 20a:	90 40       	sbci	r25, 0x00	; 0
 20c:	e1 f7       	brne	.-8      	; 0x206 <afisare_temp+0x3c>
 20e:	00 c0       	rjmp	.+0      	; 0x210 <afisare_temp+0x46>
 210:	00 00       	nop
 212:	0f 90       	pop	r0
 214:	0f 90       	pop	r0
 216:	0f 90       	pop	r0
 218:	0f 90       	pop	r0
 21a:	0f 90       	pop	r0
 21c:	0f 90       	pop	r0
 21e:	08 95       	ret

00000220 <initializare_buton>:
int apasare = 0;

void initializare_buton()
{
	
	  DDRB&=~(0x10); //setare port 12 ca input
 220:	24 98       	cbi	0x04, 4	; 4
	  PORTB|=0x10; //setare puul up
 222:	2c 9a       	sbi	0x05, 4	; 5
 224:	08 95       	ret

00000226 <functionare_buton>:
}

void functionare_buton()
{
	if(PINB&0x10)
 226:	1c 9b       	sbis	0x03, 4	; 3
 228:	49 c0       	rjmp	.+146    	; 0x2bc <functionare_buton+0x96>
	{
		
		if(contor < 255)
 22a:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <contor>
 22e:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <contor+0x1>
 232:	8f 3f       	cpi	r24, 0xFF	; 255
 234:	91 05       	cpc	r25, r1
 236:	0c f0       	brlt	.+2      	; 0x23a <functionare_buton+0x14>
 238:	4d c0       	rjmp	.+154    	; 0x2d4 <functionare_buton+0xae>
		{
			contor++;
 23a:	01 96       	adiw	r24, 0x01	; 1
 23c:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <contor+0x1>
 240:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <contor>
			if(contor == 255)
 244:	8f 3f       	cpi	r24, 0xFF	; 255
 246:	91 05       	cpc	r25, r1
 248:	09 f0       	breq	.+2      	; 0x24c <functionare_buton+0x26>
 24a:	44 c0       	rjmp	.+136    	; 0x2d4 <functionare_buton+0xae>
			{
				switch(apasare)
 24c:	e0 91 12 01 	lds	r30, 0x0112	; 0x800112 <apasare>
 250:	f0 91 13 01 	lds	r31, 0x0113	; 0x800113 <apasare+0x1>
 254:	ea 30       	cpi	r30, 0x0A	; 10
 256:	f1 05       	cpc	r31, r1
 258:	38 f5       	brcc	.+78     	; 0x2a8 <functionare_buton+0x82>
 25a:	ec 5c       	subi	r30, 0xCC	; 204
 25c:	ff 4f       	sbci	r31, 0xFF	; 255
 25e:	0c 94 39 04 	jmp	0x872	; 0x872 <__tablejump2__>
				{
					case 0: nr0(); break;
 262:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <nr0>
 266:	20 c0       	rjmp	.+64     	; 0x2a8 <functionare_buton+0x82>
					case 1: nr1(); break;
 268:	0e 94 73 01 	call	0x2e6	; 0x2e6 <nr1>
 26c:	1d c0       	rjmp	.+58     	; 0x2a8 <functionare_buton+0x82>
					case 2: nr2(); break;
 26e:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <nr2>
 272:	1a c0       	rjmp	.+52     	; 0x2a8 <functionare_buton+0x82>
					case 3: nr3(); break;
 274:	0e 94 83 01 	call	0x306	; 0x306 <nr3>
 278:	17 c0       	rjmp	.+46     	; 0x2a8 <functionare_buton+0x82>
					case 4: nr4(); break;
 27a:	0e 94 8b 01 	call	0x316	; 0x316 <nr4>
 27e:	14 c0       	rjmp	.+40     	; 0x2a8 <functionare_buton+0x82>
					case 5: nr5(); break;
 280:	0e 94 93 01 	call	0x326	; 0x326 <nr5>
 284:	11 c0       	rjmp	.+34     	; 0x2a8 <functionare_buton+0x82>
					case 6: nr6(); break;
 286:	0e 94 9b 01 	call	0x336	; 0x336 <nr6>
 28a:	0e c0       	rjmp	.+28     	; 0x2a8 <functionare_buton+0x82>
					case 7: nr7(); break;
 28c:	0e 94 a3 01 	call	0x346	; 0x346 <nr7>
 290:	0b c0       	rjmp	.+22     	; 0x2a8 <functionare_buton+0x82>
					case 8: nr8(); break;
 292:	0e 94 ab 01 	call	0x356	; 0x356 <nr8>
 296:	08 c0       	rjmp	.+16     	; 0x2a8 <functionare_buton+0x82>
					case 9: nr9(); apasare = -1; break;
 298:	0e 94 b3 01 	call	0x366	; 0x366 <nr9>
 29c:	8f ef       	ldi	r24, 0xFF	; 255
 29e:	9f ef       	ldi	r25, 0xFF	; 255
 2a0:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <apasare+0x1>
 2a4:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <apasare>
				}
				apasare++;
 2a8:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <apasare>
 2ac:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <apasare+0x1>
 2b0:	01 96       	adiw	r24, 0x01	; 1
 2b2:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <apasare+0x1>
 2b6:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <apasare>
 2ba:	08 95       	ret
			}
		}
	}
	else
	{
		if(contor>0)
 2bc:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <contor>
 2c0:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <contor+0x1>
 2c4:	18 16       	cp	r1, r24
 2c6:	19 06       	cpc	r1, r25
 2c8:	2c f4       	brge	.+10     	; 0x2d4 <functionare_buton+0xae>
		{
			contor--;
 2ca:	01 97       	sbiw	r24, 0x01	; 1
 2cc:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <contor+0x1>
 2d0:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <contor>
 2d4:	08 95       	ret

000002d6 <nr0>:
	DDRD|=g;
}*/

void nr0()
{
	PORTD |= a;
 2d6:	5e 9a       	sbi	0x0b, 6	; 11
	PORTD |= b;
 2d8:	5f 9a       	sbi	0x0b, 7	; 11
	PORTD |= c;
 2da:	5a 9a       	sbi	0x0b, 2	; 11
	PORTB |= d;
 2dc:	29 9a       	sbi	0x05, 1	; 5
	PORTB |= e;
 2de:	28 9a       	sbi	0x05, 0	; 5
	PORTD |= f;
 2e0:	5d 9a       	sbi	0x0b, 5	; 11
	
	PORTD &=~g;
 2e2:	5c 98       	cbi	0x0b, 4	; 11
 2e4:	08 95       	ret

000002e6 <nr1>:
}

void nr1()
{
	PORTD |= b;
 2e6:	5f 9a       	sbi	0x0b, 7	; 11
	PORTD |= c;
 2e8:	5a 9a       	sbi	0x0b, 2	; 11
	
	PORTD &=~a;
 2ea:	5e 98       	cbi	0x0b, 6	; 11
	PORTB &=~d;
 2ec:	29 98       	cbi	0x05, 1	; 5
	PORTB &=~e;
 2ee:	28 98       	cbi	0x05, 0	; 5
	PORTD &=~f;
 2f0:	5d 98       	cbi	0x0b, 5	; 11
	PORTD &=~g;
 2f2:	5c 98       	cbi	0x0b, 4	; 11
 2f4:	08 95       	ret

000002f6 <nr2>:
}

void nr2()
{
	PORTD |= a;
 2f6:	5e 9a       	sbi	0x0b, 6	; 11
	PORTD |= b;
 2f8:	5f 9a       	sbi	0x0b, 7	; 11
	PORTD |= g;
 2fa:	5c 9a       	sbi	0x0b, 4	; 11
	PORTB |= e;
 2fc:	28 9a       	sbi	0x05, 0	; 5
	PORTB |= d;
 2fe:	29 9a       	sbi	0x05, 1	; 5
	
	PORTD &=~f;
 300:	5d 98       	cbi	0x0b, 5	; 11
	PORTD &=~c;
 302:	5a 98       	cbi	0x0b, 2	; 11
 304:	08 95       	ret

00000306 <nr3>:
}

void nr3()
{
	PORTD |= a;
 306:	5e 9a       	sbi	0x0b, 6	; 11
	PORTD |= b;
 308:	5f 9a       	sbi	0x0b, 7	; 11
	PORTD |= c;
 30a:	5a 9a       	sbi	0x0b, 2	; 11
	PORTB |= d;
 30c:	29 9a       	sbi	0x05, 1	; 5
	PORTD |= g;
 30e:	5c 9a       	sbi	0x0b, 4	; 11
	
	PORTB &=~e;
 310:	28 98       	cbi	0x05, 0	; 5
	PORTD &=~f;
 312:	5d 98       	cbi	0x0b, 5	; 11
 314:	08 95       	ret

00000316 <nr4>:
}

void nr4()
{
	PORTD |= f;
 316:	5d 9a       	sbi	0x0b, 5	; 11
	PORTD |= g;
 318:	5c 9a       	sbi	0x0b, 4	; 11
	PORTD |= b;
 31a:	5f 9a       	sbi	0x0b, 7	; 11
	PORTD |= c;
 31c:	5a 9a       	sbi	0x0b, 2	; 11

	PORTD &=~a;
 31e:	5e 98       	cbi	0x0b, 6	; 11
	PORTB &=~d;
 320:	29 98       	cbi	0x05, 1	; 5
	PORTB &=~e;
 322:	28 98       	cbi	0x05, 0	; 5
 324:	08 95       	ret

00000326 <nr5>:
}

void nr5()
{
	PORTD |= a;
 326:	5e 9a       	sbi	0x0b, 6	; 11
	PORTD |= f;
 328:	5d 9a       	sbi	0x0b, 5	; 11
	PORTD |= g;
 32a:	5c 9a       	sbi	0x0b, 4	; 11
	PORTD |= c;
 32c:	5a 9a       	sbi	0x0b, 2	; 11
	PORTB |= d;
 32e:	29 9a       	sbi	0x05, 1	; 5
	
	PORTD &=~b;
 330:	5f 98       	cbi	0x0b, 7	; 11
	PORTB &=~e;
 332:	28 98       	cbi	0x05, 0	; 5
 334:	08 95       	ret

00000336 <nr6>:
}

void nr6()
{
	PORTD |= a;
 336:	5e 9a       	sbi	0x0b, 6	; 11
	PORTD |= f;
 338:	5d 9a       	sbi	0x0b, 5	; 11
	PORTD |= g;
 33a:	5c 9a       	sbi	0x0b, 4	; 11
	PORTD |= c;
 33c:	5a 9a       	sbi	0x0b, 2	; 11
	PORTB |= d;
 33e:	29 9a       	sbi	0x05, 1	; 5
	PORTB |= e;
 340:	28 9a       	sbi	0x05, 0	; 5

	PORTD &=~b;
 342:	5f 98       	cbi	0x0b, 7	; 11
 344:	08 95       	ret

00000346 <nr7>:
}

void nr7()
{
	PORTD |= a;
 346:	5e 9a       	sbi	0x0b, 6	; 11
	PORTD |= b;
 348:	5f 9a       	sbi	0x0b, 7	; 11
	PORTD |= c;
 34a:	5a 9a       	sbi	0x0b, 2	; 11
	
	PORTB &=~d;
 34c:	29 98       	cbi	0x05, 1	; 5
	PORTB &=~e;
 34e:	28 98       	cbi	0x05, 0	; 5
	PORTD &=~f;
 350:	5d 98       	cbi	0x0b, 5	; 11
	PORTD &=~g;
 352:	5c 98       	cbi	0x0b, 4	; 11
 354:	08 95       	ret

00000356 <nr8>:
}

void nr8()
{
	PORTD |= a;
 356:	5e 9a       	sbi	0x0b, 6	; 11
	PORTD |= b;
 358:	5f 9a       	sbi	0x0b, 7	; 11
	PORTD |= f;
 35a:	5d 9a       	sbi	0x0b, 5	; 11
	PORTD |= g;
 35c:	5c 9a       	sbi	0x0b, 4	; 11
	PORTD |= c;
 35e:	5a 9a       	sbi	0x0b, 2	; 11
	PORTB |= d;
 360:	29 9a       	sbi	0x05, 1	; 5
	PORTB |= e;
 362:	28 9a       	sbi	0x05, 0	; 5
 364:	08 95       	ret

00000366 <nr9>:
	
}

void nr9()
{
	PORTD |= a;
 366:	5e 9a       	sbi	0x0b, 6	; 11
	PORTD |= b;
 368:	5f 9a       	sbi	0x0b, 7	; 11
	PORTD |= f;
 36a:	5d 9a       	sbi	0x0b, 5	; 11
	PORTD |= g;
 36c:	5c 9a       	sbi	0x0b, 4	; 11
	PORTD |= c;
 36e:	5a 9a       	sbi	0x0b, 2	; 11
	PORTB |= d;
 370:	29 9a       	sbi	0x05, 1	; 5

	PORTB &=~e;
 372:	28 98       	cbi	0x05, 0	; 5
 374:	08 95       	ret

00000376 <intializare>:

void intializare()
{
	
	//initializare 7 seg
	DDRD|=a;
 376:	56 9a       	sbi	0x0a, 6	; 10
	DDRD|=b;
 378:	57 9a       	sbi	0x0a, 7	; 10
	DDRD|=c;
 37a:	52 9a       	sbi	0x0a, 2	; 10
	DDRB|=d;
 37c:	21 9a       	sbi	0x04, 1	; 4
	DDRB|=e;
 37e:	20 9a       	sbi	0x04, 0	; 4
	DDRD|=f;
 380:	55 9a       	sbi	0x0a, 5	; 10
	DDRD|=g;
 382:	54 9a       	sbi	0x0a, 4	; 10
	
	DDRD |= 0x08; //led 1s (POTRD3)
 384:	53 9a       	sbi	0x0a, 3	; 10
	DDRB |= 0x20; //led serial (PORTB 13)
 386:	25 9a       	sbi	0x04, 5	; 4
	DDRB |= 0x08; //led temp (PORTB 10)
 388:	23 9a       	sbi	0x04, 3	; 4
	DDRB |= 0x10; //buton (PORTB 11)
 38a:	24 9a       	sbi	0x04, 4	; 4
	DDRC |= 0x00; //port intrare (PORTC 0 (A0))
 38c:	87 b1       	in	r24, 0x07	; 7
 38e:	87 b9       	out	0x07, r24	; 7
 390:	08 95       	ret

00000392 <main>:
}

int main()
{
	
	USART_init();
 392:	0e 94 14 02 	call	0x428	; 0x428 <USART_init>
	intializare();
 396:	0e 94 bb 01 	call	0x376	; 0x376 <intializare>
	timer1_1s();
 39a:	0e 94 d7 01 	call	0x3ae	; 0x3ae <timer1_1s>
	//timer0Initializare();
	initializare_buton();
 39e:	0e 94 10 01 	call	0x220	; 0x220 <initializare_buton>

	sei();
 3a2:	78 94       	sei
	//afisare_temp();
	
	while (1)
	{
		functionare_buton();
 3a4:	0e 94 13 01 	call	0x226	; 0x226 <functionare_buton>
		control_Led_temp();
 3a8:	0e 94 bb 00 	call	0x176	; 0x176 <control_Led_temp>
		
		//control_led_pwm();
	}
 3ac:	fb cf       	rjmp	.-10     	; 0x3a4 <main+0x12>

000003ae <timer1_1s>:

int intrerupere = 0;

void timer1_1s()
{
	cli(); //stop intreruperi
 3ae:	f8 94       	cli

	/* Setare timer care sa genereze o intrerupere la 1s */
	TCCR1A = 0;// setare tot registrul TCCR1A pe 0
 3b0:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
	TCCR1B = 0;// setare tot registrul TCCR1B pe 0
 3b4:	e1 e8       	ldi	r30, 0x81	; 129
 3b6:	f0 e0       	ldi	r31, 0x00	; 0
 3b8:	10 82       	st	Z, r1
	
	//timmer/counter register, contine valoarea timer-ului
	TCNT1  = 0;//initilizare contor cu 0
 3ba:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 3be:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
	
	// setare registru comparare pentru incrementearea cu 1hz
	// output compare register
	OCR1A = 15624;
 3c2:	88 e0       	ldi	r24, 0x08	; 8
 3c4:	9d e3       	ldi	r25, 0x3D	; 61
 3c6:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 3ca:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	// = (16*10^6) / (1*1024) - 1 (must be <65536)
	// pornire mod CTC
	TCCR1B |= (1 << WGM12);
 3ce:	80 81       	ld	r24, Z
 3d0:	88 60       	ori	r24, 0x08	; 8
 3d2:	80 83       	st	Z, r24
	// Setare biti CS10 si CS12 pentru de prescaler 1024
	TCCR1B |= (1 << CS12) | (1 << CS10);
 3d4:	80 81       	ld	r24, Z
 3d6:	85 60       	ori	r24, 0x05	; 5
 3d8:	80 83       	st	Z, r24
	// permite intreruperi timer compare
	TIMSK1 |= (1 << OCIE1A);
 3da:	ef e6       	ldi	r30, 0x6F	; 111
 3dc:	f0 e0       	ldi	r31, 0x00	; 0
 3de:	80 81       	ld	r24, Z
 3e0:	82 60       	ori	r24, 0x02	; 2
 3e2:	80 83       	st	Z, r24
 3e4:	08 95       	ret

000003e6 <__vector_11>:

	//sei(); //da drumul la intreruperi
}

ISR(TIMER1_COMPA_vect)
{
 3e6:	1f 92       	push	r1
 3e8:	0f 92       	push	r0
 3ea:	0f b6       	in	r0, 0x3f	; 63
 3ec:	0f 92       	push	r0
 3ee:	11 24       	eor	r1, r1
 3f0:	8f 93       	push	r24
 3f2:	9f 93       	push	r25
	//timerul1 genereaza o intrerupere la toggle 1Hz
	//generates pulse wave of frequency 1Hz/2 = 0.5kHz (takes two cycles for full wave- toggle high then toggle low)
	if (intrerupere)
 3f4:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <intrerupere>
 3f8:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <intrerupere+0x1>
 3fc:	89 2b       	or	r24, r25
 3fe:	31 f0       	breq	.+12     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
	{
		//aprinde_led();
		PORTD |= 0x08;
 400:	5b 9a       	sbi	0x0b, 3	; 11
		intrerupere = 0;
 402:	10 92 17 01 	sts	0x0117, r1	; 0x800117 <intrerupere+0x1>
 406:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <intrerupere>
 40a:	07 c0       	rjmp	.+14     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
	}
	else
	{
		//stinge_led();
		PORTD &= ~(0x08);
 40c:	5b 98       	cbi	0x0b, 3	; 11
		intrerupere = 1;
 40e:	81 e0       	ldi	r24, 0x01	; 1
 410:	90 e0       	ldi	r25, 0x00	; 0
 412:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <intrerupere+0x1>
 416:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <intrerupere>
	}		
	
}
 41a:	9f 91       	pop	r25
 41c:	8f 91       	pop	r24
 41e:	0f 90       	pop	r0
 420:	0f be       	out	0x3f, r0	; 63
 422:	0f 90       	pop	r0
 424:	1f 90       	pop	r1
 426:	18 95       	reti

00000428 <USART_init>:
void USART_send( unsigned char data)
{
	
	while(!(UCSR0A & (1<<UDRE0)));	//cat timp bufferul de transmisie poate accepta noi date
	
	UDR0 = data;	//se salveaza in buffer
 428:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 42c:	87 e6       	ldi	r24, 0x67	; 103
 42e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 432:	e1 ec       	ldi	r30, 0xC1	; 193
 434:	f0 e0       	ldi	r31, 0x00	; 0
 436:	88 e1       	ldi	r24, 0x18	; 24
 438:	80 83       	st	Z, r24
 43a:	8e e0       	ldi	r24, 0x0E	; 14
 43c:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 440:	80 81       	ld	r24, Z
 442:	80 69       	ori	r24, 0x90	; 144
 444:	80 83       	st	Z, r24
 446:	08 95       	ret

00000448 <USART_citire>:
	
}

void USART_citire(char *data, char lungime)
{
 448:	cf 93       	push	r28
 44a:	df 93       	push	r29
 44c:	ac 01       	movw	r20, r24
 44e:	20 e0       	ldi	r18, 0x00	; 0
 450:	62 0f       	add	r22, r18
	unsigned char i;
	
	while(lungime > 0)
	{
		if(UCSR0A & (1<<UDRE0))
 452:	e0 ec       	ldi	r30, 0xC0	; 192
 454:	f0 e0       	ldi	r31, 0x00	; 0
		{
			UDR0 = data[i++];
 456:	a6 ec       	ldi	r26, 0xC6	; 198
 458:	b0 e0       	ldi	r27, 0x00	; 0

void USART_citire(char *data, char lungime)
{
	unsigned char i;
	
	while(lungime > 0)
 45a:	09 c0       	rjmp	.+18     	; 0x46e <USART_citire+0x26>
	{
		if(UCSR0A & (1<<UDRE0))
 45c:	90 81       	ld	r25, Z
 45e:	95 ff       	sbrs	r25, 5
 460:	fd cf       	rjmp	.-6      	; 0x45c <USART_citire+0x14>
		{
			UDR0 = data[i++];
 462:	ea 01       	movw	r28, r20
 464:	c2 0f       	add	r28, r18
 466:	d1 1d       	adc	r29, r1
 468:	88 81       	ld	r24, Y
 46a:	8c 93       	st	X, r24
 46c:	2f 5f       	subi	r18, 0xFF	; 255

void USART_citire(char *data, char lungime)
{
	unsigned char i;
	
	while(lungime > 0)
 46e:	26 17       	cp	r18, r22
 470:	21 f0       	breq	.+8      	; 0x47a <USART_citire+0x32>
	{
		if(UCSR0A & (1<<UDRE0))
 472:	90 81       	ld	r25, Z
 474:	95 fd       	sbrc	r25, 5
 476:	f5 cf       	rjmp	.-22     	; 0x462 <USART_citire+0x1a>
 478:	f1 cf       	rjmp	.-30     	; 0x45c <USART_citire+0x14>
		{
			UDR0 = data[i++];
			lungime--;
		}
	}
}
 47a:	df 91       	pop	r29
 47c:	cf 91       	pop	r28
 47e:	08 95       	ret

00000480 <__vector_18>:

ISR(USART_RX_vect)
{
 480:	1f 92       	push	r1
 482:	0f 92       	push	r0
 484:	0f b6       	in	r0, 0x3f	; 63
 486:	0f 92       	push	r0
 488:	11 24       	eor	r1, r1
 48a:	2f 93       	push	r18
 48c:	3f 93       	push	r19
 48e:	4f 93       	push	r20
 490:	5f 93       	push	r21
 492:	6f 93       	push	r22
 494:	7f 93       	push	r23
 496:	8f 93       	push	r24
 498:	9f 93       	push	r25
 49a:	af 93       	push	r26
 49c:	bf 93       	push	r27
 49e:	ef 93       	push	r30
 4a0:	ff 93       	push	r31
	char ReceivedByte;
	ReceivedByte = UDR0; // Fetch the received byte value into the variable "ByteReceived"
 4a2:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	//UDR0 = ReceivedByte; // Echo back the received byte back to the computer
	
	if(ReceivedByte == 'A')
 4a6:	81 34       	cpi	r24, 0x41	; 65
 4a8:	11 f4       	brne	.+4      	; 0x4ae <__vector_18+0x2e>
	{
		PORTB |= 0x20;
 4aa:	2d 9a       	sbi	0x05, 5	; 5
 4ac:	03 c0       	rjmp	.+6      	; 0x4b4 <__vector_18+0x34>
		//PORTB |= (1<<5);
	}
	else
	if(ReceivedByte == 'S')
 4ae:	83 35       	cpi	r24, 0x53	; 83
 4b0:	09 f4       	brne	.+2      	; 0x4b4 <__vector_18+0x34>
	{
		//PORTB &=~(1<<5);
		PORTB &=~(0x20);
 4b2:	2d 98       	cbi	0x05, 5	; 5
	}

	afisare_temp();	
 4b4:	0e 94 e5 00 	call	0x1ca	; 0x1ca <afisare_temp>
	
 4b8:	ff 91       	pop	r31
 4ba:	ef 91       	pop	r30
 4bc:	bf 91       	pop	r27
 4be:	af 91       	pop	r26
 4c0:	9f 91       	pop	r25
 4c2:	8f 91       	pop	r24
 4c4:	7f 91       	pop	r23
 4c6:	6f 91       	pop	r22
 4c8:	5f 91       	pop	r21
 4ca:	4f 91       	pop	r20
 4cc:	3f 91       	pop	r19
 4ce:	2f 91       	pop	r18
 4d0:	0f 90       	pop	r0
 4d2:	0f be       	out	0x3f, r0	; 63
 4d4:	0f 90       	pop	r0
 4d6:	1f 90       	pop	r1
 4d8:	18 95       	reti

000004da <__subsf3>:
 4da:	50 58       	subi	r21, 0x80	; 128

000004dc <__addsf3>:
 4dc:	bb 27       	eor	r27, r27
 4de:	aa 27       	eor	r26, r26
 4e0:	0e 94 85 02 	call	0x50a	; 0x50a <__addsf3x>
 4e4:	0c 94 8d 03 	jmp	0x71a	; 0x71a <__fp_round>
 4e8:	0e 94 7f 03 	call	0x6fe	; 0x6fe <__fp_pscA>
 4ec:	38 f0       	brcs	.+14     	; 0x4fc <__addsf3+0x20>
 4ee:	0e 94 86 03 	call	0x70c	; 0x70c <__fp_pscB>
 4f2:	20 f0       	brcs	.+8      	; 0x4fc <__addsf3+0x20>
 4f4:	39 f4       	brne	.+14     	; 0x504 <__addsf3+0x28>
 4f6:	9f 3f       	cpi	r25, 0xFF	; 255
 4f8:	19 f4       	brne	.+6      	; 0x500 <__addsf3+0x24>
 4fa:	26 f4       	brtc	.+8      	; 0x504 <__addsf3+0x28>
 4fc:	0c 94 7c 03 	jmp	0x6f8	; 0x6f8 <__fp_nan>
 500:	0e f4       	brtc	.+2      	; 0x504 <__addsf3+0x28>
 502:	e0 95       	com	r30
 504:	e7 fb       	bst	r30, 7
 506:	0c 94 76 03 	jmp	0x6ec	; 0x6ec <__fp_inf>

0000050a <__addsf3x>:
 50a:	e9 2f       	mov	r30, r25
 50c:	0e 94 9e 03 	call	0x73c	; 0x73c <__fp_split3>
 510:	58 f3       	brcs	.-42     	; 0x4e8 <__addsf3+0xc>
 512:	ba 17       	cp	r27, r26
 514:	62 07       	cpc	r22, r18
 516:	73 07       	cpc	r23, r19
 518:	84 07       	cpc	r24, r20
 51a:	95 07       	cpc	r25, r21
 51c:	20 f0       	brcs	.+8      	; 0x526 <__addsf3x+0x1c>
 51e:	79 f4       	brne	.+30     	; 0x53e <__addsf3x+0x34>
 520:	a6 f5       	brtc	.+104    	; 0x58a <__addsf3x+0x80>
 522:	0c 94 c0 03 	jmp	0x780	; 0x780 <__fp_zero>
 526:	0e f4       	brtc	.+2      	; 0x52a <__addsf3x+0x20>
 528:	e0 95       	com	r30
 52a:	0b 2e       	mov	r0, r27
 52c:	ba 2f       	mov	r27, r26
 52e:	a0 2d       	mov	r26, r0
 530:	0b 01       	movw	r0, r22
 532:	b9 01       	movw	r22, r18
 534:	90 01       	movw	r18, r0
 536:	0c 01       	movw	r0, r24
 538:	ca 01       	movw	r24, r20
 53a:	a0 01       	movw	r20, r0
 53c:	11 24       	eor	r1, r1
 53e:	ff 27       	eor	r31, r31
 540:	59 1b       	sub	r21, r25
 542:	99 f0       	breq	.+38     	; 0x56a <__addsf3x+0x60>
 544:	59 3f       	cpi	r21, 0xF9	; 249
 546:	50 f4       	brcc	.+20     	; 0x55c <__addsf3x+0x52>
 548:	50 3e       	cpi	r21, 0xE0	; 224
 54a:	68 f1       	brcs	.+90     	; 0x5a6 <__addsf3x+0x9c>
 54c:	1a 16       	cp	r1, r26
 54e:	f0 40       	sbci	r31, 0x00	; 0
 550:	a2 2f       	mov	r26, r18
 552:	23 2f       	mov	r18, r19
 554:	34 2f       	mov	r19, r20
 556:	44 27       	eor	r20, r20
 558:	58 5f       	subi	r21, 0xF8	; 248
 55a:	f3 cf       	rjmp	.-26     	; 0x542 <__addsf3x+0x38>
 55c:	46 95       	lsr	r20
 55e:	37 95       	ror	r19
 560:	27 95       	ror	r18
 562:	a7 95       	ror	r26
 564:	f0 40       	sbci	r31, 0x00	; 0
 566:	53 95       	inc	r21
 568:	c9 f7       	brne	.-14     	; 0x55c <__addsf3x+0x52>
 56a:	7e f4       	brtc	.+30     	; 0x58a <__addsf3x+0x80>
 56c:	1f 16       	cp	r1, r31
 56e:	ba 0b       	sbc	r27, r26
 570:	62 0b       	sbc	r22, r18
 572:	73 0b       	sbc	r23, r19
 574:	84 0b       	sbc	r24, r20
 576:	ba f0       	brmi	.+46     	; 0x5a6 <__addsf3x+0x9c>
 578:	91 50       	subi	r25, 0x01	; 1
 57a:	a1 f0       	breq	.+40     	; 0x5a4 <__addsf3x+0x9a>
 57c:	ff 0f       	add	r31, r31
 57e:	bb 1f       	adc	r27, r27
 580:	66 1f       	adc	r22, r22
 582:	77 1f       	adc	r23, r23
 584:	88 1f       	adc	r24, r24
 586:	c2 f7       	brpl	.-16     	; 0x578 <__addsf3x+0x6e>
 588:	0e c0       	rjmp	.+28     	; 0x5a6 <__addsf3x+0x9c>
 58a:	ba 0f       	add	r27, r26
 58c:	62 1f       	adc	r22, r18
 58e:	73 1f       	adc	r23, r19
 590:	84 1f       	adc	r24, r20
 592:	48 f4       	brcc	.+18     	; 0x5a6 <__addsf3x+0x9c>
 594:	87 95       	ror	r24
 596:	77 95       	ror	r23
 598:	67 95       	ror	r22
 59a:	b7 95       	ror	r27
 59c:	f7 95       	ror	r31
 59e:	9e 3f       	cpi	r25, 0xFE	; 254
 5a0:	08 f0       	brcs	.+2      	; 0x5a4 <__addsf3x+0x9a>
 5a2:	b0 cf       	rjmp	.-160    	; 0x504 <__addsf3+0x28>
 5a4:	93 95       	inc	r25
 5a6:	88 0f       	add	r24, r24
 5a8:	08 f0       	brcs	.+2      	; 0x5ac <__addsf3x+0xa2>
 5aa:	99 27       	eor	r25, r25
 5ac:	ee 0f       	add	r30, r30
 5ae:	97 95       	ror	r25
 5b0:	87 95       	ror	r24
 5b2:	08 95       	ret

000005b4 <__cmpsf2>:
 5b4:	0e 94 52 03 	call	0x6a4	; 0x6a4 <__fp_cmp>
 5b8:	08 f4       	brcc	.+2      	; 0x5bc <__cmpsf2+0x8>
 5ba:	81 e0       	ldi	r24, 0x01	; 1
 5bc:	08 95       	ret

000005be <__fixsfsi>:
 5be:	0e 94 e6 02 	call	0x5cc	; 0x5cc <__fixunssfsi>
 5c2:	68 94       	set
 5c4:	b1 11       	cpse	r27, r1
 5c6:	0c 94 c1 03 	jmp	0x782	; 0x782 <__fp_szero>
 5ca:	08 95       	ret

000005cc <__fixunssfsi>:
 5cc:	0e 94 a6 03 	call	0x74c	; 0x74c <__fp_splitA>
 5d0:	88 f0       	brcs	.+34     	; 0x5f4 <__fixunssfsi+0x28>
 5d2:	9f 57       	subi	r25, 0x7F	; 127
 5d4:	98 f0       	brcs	.+38     	; 0x5fc <__fixunssfsi+0x30>
 5d6:	b9 2f       	mov	r27, r25
 5d8:	99 27       	eor	r25, r25
 5da:	b7 51       	subi	r27, 0x17	; 23
 5dc:	b0 f0       	brcs	.+44     	; 0x60a <__fixunssfsi+0x3e>
 5de:	e1 f0       	breq	.+56     	; 0x618 <__fixunssfsi+0x4c>
 5e0:	66 0f       	add	r22, r22
 5e2:	77 1f       	adc	r23, r23
 5e4:	88 1f       	adc	r24, r24
 5e6:	99 1f       	adc	r25, r25
 5e8:	1a f0       	brmi	.+6      	; 0x5f0 <__fixunssfsi+0x24>
 5ea:	ba 95       	dec	r27
 5ec:	c9 f7       	brne	.-14     	; 0x5e0 <__fixunssfsi+0x14>
 5ee:	14 c0       	rjmp	.+40     	; 0x618 <__fixunssfsi+0x4c>
 5f0:	b1 30       	cpi	r27, 0x01	; 1
 5f2:	91 f0       	breq	.+36     	; 0x618 <__fixunssfsi+0x4c>
 5f4:	0e 94 c0 03 	call	0x780	; 0x780 <__fp_zero>
 5f8:	b1 e0       	ldi	r27, 0x01	; 1
 5fa:	08 95       	ret
 5fc:	0c 94 c0 03 	jmp	0x780	; 0x780 <__fp_zero>
 600:	67 2f       	mov	r22, r23
 602:	78 2f       	mov	r23, r24
 604:	88 27       	eor	r24, r24
 606:	b8 5f       	subi	r27, 0xF8	; 248
 608:	39 f0       	breq	.+14     	; 0x618 <__fixunssfsi+0x4c>
 60a:	b9 3f       	cpi	r27, 0xF9	; 249
 60c:	cc f3       	brlt	.-14     	; 0x600 <__fixunssfsi+0x34>
 60e:	86 95       	lsr	r24
 610:	77 95       	ror	r23
 612:	67 95       	ror	r22
 614:	b3 95       	inc	r27
 616:	d9 f7       	brne	.-10     	; 0x60e <__fixunssfsi+0x42>
 618:	3e f4       	brtc	.+14     	; 0x628 <__fixunssfsi+0x5c>
 61a:	90 95       	com	r25
 61c:	80 95       	com	r24
 61e:	70 95       	com	r23
 620:	61 95       	neg	r22
 622:	7f 4f       	sbci	r23, 0xFF	; 255
 624:	8f 4f       	sbci	r24, 0xFF	; 255
 626:	9f 4f       	sbci	r25, 0xFF	; 255
 628:	08 95       	ret

0000062a <__floatunsisf>:
 62a:	e8 94       	clt
 62c:	09 c0       	rjmp	.+18     	; 0x640 <__floatsisf+0x12>

0000062e <__floatsisf>:
 62e:	97 fb       	bst	r25, 7
 630:	3e f4       	brtc	.+14     	; 0x640 <__floatsisf+0x12>
 632:	90 95       	com	r25
 634:	80 95       	com	r24
 636:	70 95       	com	r23
 638:	61 95       	neg	r22
 63a:	7f 4f       	sbci	r23, 0xFF	; 255
 63c:	8f 4f       	sbci	r24, 0xFF	; 255
 63e:	9f 4f       	sbci	r25, 0xFF	; 255
 640:	99 23       	and	r25, r25
 642:	a9 f0       	breq	.+42     	; 0x66e <__floatsisf+0x40>
 644:	f9 2f       	mov	r31, r25
 646:	96 e9       	ldi	r25, 0x96	; 150
 648:	bb 27       	eor	r27, r27
 64a:	93 95       	inc	r25
 64c:	f6 95       	lsr	r31
 64e:	87 95       	ror	r24
 650:	77 95       	ror	r23
 652:	67 95       	ror	r22
 654:	b7 95       	ror	r27
 656:	f1 11       	cpse	r31, r1
 658:	f8 cf       	rjmp	.-16     	; 0x64a <__floatsisf+0x1c>
 65a:	fa f4       	brpl	.+62     	; 0x69a <__floatsisf+0x6c>
 65c:	bb 0f       	add	r27, r27
 65e:	11 f4       	brne	.+4      	; 0x664 <__floatsisf+0x36>
 660:	60 ff       	sbrs	r22, 0
 662:	1b c0       	rjmp	.+54     	; 0x69a <__floatsisf+0x6c>
 664:	6f 5f       	subi	r22, 0xFF	; 255
 666:	7f 4f       	sbci	r23, 0xFF	; 255
 668:	8f 4f       	sbci	r24, 0xFF	; 255
 66a:	9f 4f       	sbci	r25, 0xFF	; 255
 66c:	16 c0       	rjmp	.+44     	; 0x69a <__floatsisf+0x6c>
 66e:	88 23       	and	r24, r24
 670:	11 f0       	breq	.+4      	; 0x676 <__floatsisf+0x48>
 672:	96 e9       	ldi	r25, 0x96	; 150
 674:	11 c0       	rjmp	.+34     	; 0x698 <__floatsisf+0x6a>
 676:	77 23       	and	r23, r23
 678:	21 f0       	breq	.+8      	; 0x682 <__floatsisf+0x54>
 67a:	9e e8       	ldi	r25, 0x8E	; 142
 67c:	87 2f       	mov	r24, r23
 67e:	76 2f       	mov	r23, r22
 680:	05 c0       	rjmp	.+10     	; 0x68c <__floatsisf+0x5e>
 682:	66 23       	and	r22, r22
 684:	71 f0       	breq	.+28     	; 0x6a2 <__floatsisf+0x74>
 686:	96 e8       	ldi	r25, 0x86	; 134
 688:	86 2f       	mov	r24, r22
 68a:	70 e0       	ldi	r23, 0x00	; 0
 68c:	60 e0       	ldi	r22, 0x00	; 0
 68e:	2a f0       	brmi	.+10     	; 0x69a <__floatsisf+0x6c>
 690:	9a 95       	dec	r25
 692:	66 0f       	add	r22, r22
 694:	77 1f       	adc	r23, r23
 696:	88 1f       	adc	r24, r24
 698:	da f7       	brpl	.-10     	; 0x690 <__floatsisf+0x62>
 69a:	88 0f       	add	r24, r24
 69c:	96 95       	lsr	r25
 69e:	87 95       	ror	r24
 6a0:	97 f9       	bld	r25, 7
 6a2:	08 95       	ret

000006a4 <__fp_cmp>:
 6a4:	99 0f       	add	r25, r25
 6a6:	00 08       	sbc	r0, r0
 6a8:	55 0f       	add	r21, r21
 6aa:	aa 0b       	sbc	r26, r26
 6ac:	e0 e8       	ldi	r30, 0x80	; 128
 6ae:	fe ef       	ldi	r31, 0xFE	; 254
 6b0:	16 16       	cp	r1, r22
 6b2:	17 06       	cpc	r1, r23
 6b4:	e8 07       	cpc	r30, r24
 6b6:	f9 07       	cpc	r31, r25
 6b8:	c0 f0       	brcs	.+48     	; 0x6ea <__fp_cmp+0x46>
 6ba:	12 16       	cp	r1, r18
 6bc:	13 06       	cpc	r1, r19
 6be:	e4 07       	cpc	r30, r20
 6c0:	f5 07       	cpc	r31, r21
 6c2:	98 f0       	brcs	.+38     	; 0x6ea <__fp_cmp+0x46>
 6c4:	62 1b       	sub	r22, r18
 6c6:	73 0b       	sbc	r23, r19
 6c8:	84 0b       	sbc	r24, r20
 6ca:	95 0b       	sbc	r25, r21
 6cc:	39 f4       	brne	.+14     	; 0x6dc <__fp_cmp+0x38>
 6ce:	0a 26       	eor	r0, r26
 6d0:	61 f0       	breq	.+24     	; 0x6ea <__fp_cmp+0x46>
 6d2:	23 2b       	or	r18, r19
 6d4:	24 2b       	or	r18, r20
 6d6:	25 2b       	or	r18, r21
 6d8:	21 f4       	brne	.+8      	; 0x6e2 <__fp_cmp+0x3e>
 6da:	08 95       	ret
 6dc:	0a 26       	eor	r0, r26
 6de:	09 f4       	brne	.+2      	; 0x6e2 <__fp_cmp+0x3e>
 6e0:	a1 40       	sbci	r26, 0x01	; 1
 6e2:	a6 95       	lsr	r26
 6e4:	8f ef       	ldi	r24, 0xFF	; 255
 6e6:	81 1d       	adc	r24, r1
 6e8:	81 1d       	adc	r24, r1
 6ea:	08 95       	ret

000006ec <__fp_inf>:
 6ec:	97 f9       	bld	r25, 7
 6ee:	9f 67       	ori	r25, 0x7F	; 127
 6f0:	80 e8       	ldi	r24, 0x80	; 128
 6f2:	70 e0       	ldi	r23, 0x00	; 0
 6f4:	60 e0       	ldi	r22, 0x00	; 0
 6f6:	08 95       	ret

000006f8 <__fp_nan>:
 6f8:	9f ef       	ldi	r25, 0xFF	; 255
 6fa:	80 ec       	ldi	r24, 0xC0	; 192
 6fc:	08 95       	ret

000006fe <__fp_pscA>:
 6fe:	00 24       	eor	r0, r0
 700:	0a 94       	dec	r0
 702:	16 16       	cp	r1, r22
 704:	17 06       	cpc	r1, r23
 706:	18 06       	cpc	r1, r24
 708:	09 06       	cpc	r0, r25
 70a:	08 95       	ret

0000070c <__fp_pscB>:
 70c:	00 24       	eor	r0, r0
 70e:	0a 94       	dec	r0
 710:	12 16       	cp	r1, r18
 712:	13 06       	cpc	r1, r19
 714:	14 06       	cpc	r1, r20
 716:	05 06       	cpc	r0, r21
 718:	08 95       	ret

0000071a <__fp_round>:
 71a:	09 2e       	mov	r0, r25
 71c:	03 94       	inc	r0
 71e:	00 0c       	add	r0, r0
 720:	11 f4       	brne	.+4      	; 0x726 <__fp_round+0xc>
 722:	88 23       	and	r24, r24
 724:	52 f0       	brmi	.+20     	; 0x73a <__fp_round+0x20>
 726:	bb 0f       	add	r27, r27
 728:	40 f4       	brcc	.+16     	; 0x73a <__fp_round+0x20>
 72a:	bf 2b       	or	r27, r31
 72c:	11 f4       	brne	.+4      	; 0x732 <__fp_round+0x18>
 72e:	60 ff       	sbrs	r22, 0
 730:	04 c0       	rjmp	.+8      	; 0x73a <__fp_round+0x20>
 732:	6f 5f       	subi	r22, 0xFF	; 255
 734:	7f 4f       	sbci	r23, 0xFF	; 255
 736:	8f 4f       	sbci	r24, 0xFF	; 255
 738:	9f 4f       	sbci	r25, 0xFF	; 255
 73a:	08 95       	ret

0000073c <__fp_split3>:
 73c:	57 fd       	sbrc	r21, 7
 73e:	90 58       	subi	r25, 0x80	; 128
 740:	44 0f       	add	r20, r20
 742:	55 1f       	adc	r21, r21
 744:	59 f0       	breq	.+22     	; 0x75c <__fp_splitA+0x10>
 746:	5f 3f       	cpi	r21, 0xFF	; 255
 748:	71 f0       	breq	.+28     	; 0x766 <__fp_splitA+0x1a>
 74a:	47 95       	ror	r20

0000074c <__fp_splitA>:
 74c:	88 0f       	add	r24, r24
 74e:	97 fb       	bst	r25, 7
 750:	99 1f       	adc	r25, r25
 752:	61 f0       	breq	.+24     	; 0x76c <__fp_splitA+0x20>
 754:	9f 3f       	cpi	r25, 0xFF	; 255
 756:	79 f0       	breq	.+30     	; 0x776 <__fp_splitA+0x2a>
 758:	87 95       	ror	r24
 75a:	08 95       	ret
 75c:	12 16       	cp	r1, r18
 75e:	13 06       	cpc	r1, r19
 760:	14 06       	cpc	r1, r20
 762:	55 1f       	adc	r21, r21
 764:	f2 cf       	rjmp	.-28     	; 0x74a <__fp_split3+0xe>
 766:	46 95       	lsr	r20
 768:	f1 df       	rcall	.-30     	; 0x74c <__fp_splitA>
 76a:	08 c0       	rjmp	.+16     	; 0x77c <__fp_splitA+0x30>
 76c:	16 16       	cp	r1, r22
 76e:	17 06       	cpc	r1, r23
 770:	18 06       	cpc	r1, r24
 772:	99 1f       	adc	r25, r25
 774:	f1 cf       	rjmp	.-30     	; 0x758 <__fp_splitA+0xc>
 776:	86 95       	lsr	r24
 778:	71 05       	cpc	r23, r1
 77a:	61 05       	cpc	r22, r1
 77c:	08 94       	sec
 77e:	08 95       	ret

00000780 <__fp_zero>:
 780:	e8 94       	clt

00000782 <__fp_szero>:
 782:	bb 27       	eor	r27, r27
 784:	66 27       	eor	r22, r22
 786:	77 27       	eor	r23, r23
 788:	cb 01       	movw	r24, r22
 78a:	97 f9       	bld	r25, 7
 78c:	08 95       	ret

0000078e <__gesf2>:
 78e:	0e 94 52 03 	call	0x6a4	; 0x6a4 <__fp_cmp>
 792:	08 f4       	brcc	.+2      	; 0x796 <__gesf2+0x8>
 794:	8f ef       	ldi	r24, 0xFF	; 255
 796:	08 95       	ret

00000798 <__mulsf3>:
 798:	0e 94 df 03 	call	0x7be	; 0x7be <__mulsf3x>
 79c:	0c 94 8d 03 	jmp	0x71a	; 0x71a <__fp_round>
 7a0:	0e 94 7f 03 	call	0x6fe	; 0x6fe <__fp_pscA>
 7a4:	38 f0       	brcs	.+14     	; 0x7b4 <__mulsf3+0x1c>
 7a6:	0e 94 86 03 	call	0x70c	; 0x70c <__fp_pscB>
 7aa:	20 f0       	brcs	.+8      	; 0x7b4 <__mulsf3+0x1c>
 7ac:	95 23       	and	r25, r21
 7ae:	11 f0       	breq	.+4      	; 0x7b4 <__mulsf3+0x1c>
 7b0:	0c 94 76 03 	jmp	0x6ec	; 0x6ec <__fp_inf>
 7b4:	0c 94 7c 03 	jmp	0x6f8	; 0x6f8 <__fp_nan>
 7b8:	11 24       	eor	r1, r1
 7ba:	0c 94 c1 03 	jmp	0x782	; 0x782 <__fp_szero>

000007be <__mulsf3x>:
 7be:	0e 94 9e 03 	call	0x73c	; 0x73c <__fp_split3>
 7c2:	70 f3       	brcs	.-36     	; 0x7a0 <__mulsf3+0x8>

000007c4 <__mulsf3_pse>:
 7c4:	95 9f       	mul	r25, r21
 7c6:	c1 f3       	breq	.-16     	; 0x7b8 <__mulsf3+0x20>
 7c8:	95 0f       	add	r25, r21
 7ca:	50 e0       	ldi	r21, 0x00	; 0
 7cc:	55 1f       	adc	r21, r21
 7ce:	62 9f       	mul	r22, r18
 7d0:	f0 01       	movw	r30, r0
 7d2:	72 9f       	mul	r23, r18
 7d4:	bb 27       	eor	r27, r27
 7d6:	f0 0d       	add	r31, r0
 7d8:	b1 1d       	adc	r27, r1
 7da:	63 9f       	mul	r22, r19
 7dc:	aa 27       	eor	r26, r26
 7de:	f0 0d       	add	r31, r0
 7e0:	b1 1d       	adc	r27, r1
 7e2:	aa 1f       	adc	r26, r26
 7e4:	64 9f       	mul	r22, r20
 7e6:	66 27       	eor	r22, r22
 7e8:	b0 0d       	add	r27, r0
 7ea:	a1 1d       	adc	r26, r1
 7ec:	66 1f       	adc	r22, r22
 7ee:	82 9f       	mul	r24, r18
 7f0:	22 27       	eor	r18, r18
 7f2:	b0 0d       	add	r27, r0
 7f4:	a1 1d       	adc	r26, r1
 7f6:	62 1f       	adc	r22, r18
 7f8:	73 9f       	mul	r23, r19
 7fa:	b0 0d       	add	r27, r0
 7fc:	a1 1d       	adc	r26, r1
 7fe:	62 1f       	adc	r22, r18
 800:	83 9f       	mul	r24, r19
 802:	a0 0d       	add	r26, r0
 804:	61 1d       	adc	r22, r1
 806:	22 1f       	adc	r18, r18
 808:	74 9f       	mul	r23, r20
 80a:	33 27       	eor	r19, r19
 80c:	a0 0d       	add	r26, r0
 80e:	61 1d       	adc	r22, r1
 810:	23 1f       	adc	r18, r19
 812:	84 9f       	mul	r24, r20
 814:	60 0d       	add	r22, r0
 816:	21 1d       	adc	r18, r1
 818:	82 2f       	mov	r24, r18
 81a:	76 2f       	mov	r23, r22
 81c:	6a 2f       	mov	r22, r26
 81e:	11 24       	eor	r1, r1
 820:	9f 57       	subi	r25, 0x7F	; 127
 822:	50 40       	sbci	r21, 0x00	; 0
 824:	9a f0       	brmi	.+38     	; 0x84c <__mulsf3_pse+0x88>
 826:	f1 f0       	breq	.+60     	; 0x864 <__mulsf3_pse+0xa0>
 828:	88 23       	and	r24, r24
 82a:	4a f0       	brmi	.+18     	; 0x83e <__mulsf3_pse+0x7a>
 82c:	ee 0f       	add	r30, r30
 82e:	ff 1f       	adc	r31, r31
 830:	bb 1f       	adc	r27, r27
 832:	66 1f       	adc	r22, r22
 834:	77 1f       	adc	r23, r23
 836:	88 1f       	adc	r24, r24
 838:	91 50       	subi	r25, 0x01	; 1
 83a:	50 40       	sbci	r21, 0x00	; 0
 83c:	a9 f7       	brne	.-22     	; 0x828 <__mulsf3_pse+0x64>
 83e:	9e 3f       	cpi	r25, 0xFE	; 254
 840:	51 05       	cpc	r21, r1
 842:	80 f0       	brcs	.+32     	; 0x864 <__mulsf3_pse+0xa0>
 844:	0c 94 76 03 	jmp	0x6ec	; 0x6ec <__fp_inf>
 848:	0c 94 c1 03 	jmp	0x782	; 0x782 <__fp_szero>
 84c:	5f 3f       	cpi	r21, 0xFF	; 255
 84e:	e4 f3       	brlt	.-8      	; 0x848 <__mulsf3_pse+0x84>
 850:	98 3e       	cpi	r25, 0xE8	; 232
 852:	d4 f3       	brlt	.-12     	; 0x848 <__mulsf3_pse+0x84>
 854:	86 95       	lsr	r24
 856:	77 95       	ror	r23
 858:	67 95       	ror	r22
 85a:	b7 95       	ror	r27
 85c:	f7 95       	ror	r31
 85e:	e7 95       	ror	r30
 860:	9f 5f       	subi	r25, 0xFF	; 255
 862:	c1 f7       	brne	.-16     	; 0x854 <__mulsf3_pse+0x90>
 864:	fe 2b       	or	r31, r30
 866:	88 0f       	add	r24, r24
 868:	91 1d       	adc	r25, r1
 86a:	96 95       	lsr	r25
 86c:	87 95       	ror	r24
 86e:	97 f9       	bld	r25, 7
 870:	08 95       	ret

00000872 <__tablejump2__>:
 872:	ee 0f       	add	r30, r30
 874:	ff 1f       	adc	r31, r31
 876:	05 90       	lpm	r0, Z+
 878:	f4 91       	lpm	r31, Z
 87a:	e0 2d       	mov	r30, r0
 87c:	09 94       	ijmp

0000087e <sprintf>:
 87e:	ae e0       	ldi	r26, 0x0E	; 14
 880:	b0 e0       	ldi	r27, 0x00	; 0
 882:	e5 e4       	ldi	r30, 0x45	; 69
 884:	f4 e0       	ldi	r31, 0x04	; 4
 886:	0c 94 ee 06 	jmp	0xddc	; 0xddc <__prologue_saves__+0x1c>
 88a:	0d 89       	ldd	r16, Y+21	; 0x15
 88c:	1e 89       	ldd	r17, Y+22	; 0x16
 88e:	86 e0       	ldi	r24, 0x06	; 6
 890:	8c 83       	std	Y+4, r24	; 0x04
 892:	1a 83       	std	Y+2, r17	; 0x02
 894:	09 83       	std	Y+1, r16	; 0x01
 896:	8f ef       	ldi	r24, 0xFF	; 255
 898:	9f e7       	ldi	r25, 0x7F	; 127
 89a:	9e 83       	std	Y+6, r25	; 0x06
 89c:	8d 83       	std	Y+5, r24	; 0x05
 89e:	ae 01       	movw	r20, r28
 8a0:	47 5e       	subi	r20, 0xE7	; 231
 8a2:	5f 4f       	sbci	r21, 0xFF	; 255
 8a4:	6f 89       	ldd	r22, Y+23	; 0x17
 8a6:	78 8d       	ldd	r23, Y+24	; 0x18
 8a8:	ce 01       	movw	r24, r28
 8aa:	01 96       	adiw	r24, 0x01	; 1
 8ac:	0e 94 62 04 	call	0x8c4	; 0x8c4 <vfprintf>
 8b0:	2f 81       	ldd	r18, Y+7	; 0x07
 8b2:	38 85       	ldd	r19, Y+8	; 0x08
 8b4:	f8 01       	movw	r30, r16
 8b6:	e2 0f       	add	r30, r18
 8b8:	f3 1f       	adc	r31, r19
 8ba:	10 82       	st	Z, r1
 8bc:	2e 96       	adiw	r28, 0x0e	; 14
 8be:	e4 e0       	ldi	r30, 0x04	; 4
 8c0:	0c 94 0a 07 	jmp	0xe14	; 0xe14 <__epilogue_restores__+0x1c>

000008c4 <vfprintf>:
 8c4:	ac e0       	ldi	r26, 0x0C	; 12
 8c6:	b0 e0       	ldi	r27, 0x00	; 0
 8c8:	e8 e6       	ldi	r30, 0x68	; 104
 8ca:	f4 e0       	ldi	r31, 0x04	; 4
 8cc:	0c 94 e0 06 	jmp	0xdc0	; 0xdc0 <__prologue_saves__>
 8d0:	7c 01       	movw	r14, r24
 8d2:	6b 01       	movw	r12, r22
 8d4:	8a 01       	movw	r16, r20
 8d6:	fc 01       	movw	r30, r24
 8d8:	17 82       	std	Z+7, r1	; 0x07
 8da:	16 82       	std	Z+6, r1	; 0x06
 8dc:	83 81       	ldd	r24, Z+3	; 0x03
 8de:	81 ff       	sbrs	r24, 1
 8e0:	bd c1       	rjmp	.+890    	; 0xc5c <__stack+0x35d>
 8e2:	ce 01       	movw	r24, r28
 8e4:	01 96       	adiw	r24, 0x01	; 1
 8e6:	4c 01       	movw	r8, r24
 8e8:	f7 01       	movw	r30, r14
 8ea:	93 81       	ldd	r25, Z+3	; 0x03
 8ec:	f6 01       	movw	r30, r12
 8ee:	93 fd       	sbrc	r25, 3
 8f0:	85 91       	lpm	r24, Z+
 8f2:	93 ff       	sbrs	r25, 3
 8f4:	81 91       	ld	r24, Z+
 8f6:	6f 01       	movw	r12, r30
 8f8:	88 23       	and	r24, r24
 8fa:	09 f4       	brne	.+2      	; 0x8fe <vfprintf+0x3a>
 8fc:	ab c1       	rjmp	.+854    	; 0xc54 <__stack+0x355>
 8fe:	85 32       	cpi	r24, 0x25	; 37
 900:	39 f4       	brne	.+14     	; 0x910 <__stack+0x11>
 902:	93 fd       	sbrc	r25, 3
 904:	85 91       	lpm	r24, Z+
 906:	93 ff       	sbrs	r25, 3
 908:	81 91       	ld	r24, Z+
 90a:	6f 01       	movw	r12, r30
 90c:	85 32       	cpi	r24, 0x25	; 37
 90e:	29 f4       	brne	.+10     	; 0x91a <__stack+0x1b>
 910:	b7 01       	movw	r22, r14
 912:	90 e0       	ldi	r25, 0x00	; 0
 914:	0e 94 4a 06 	call	0xc94	; 0xc94 <fputc>
 918:	e7 cf       	rjmp	.-50     	; 0x8e8 <vfprintf+0x24>
 91a:	51 2c       	mov	r5, r1
 91c:	31 2c       	mov	r3, r1
 91e:	20 e0       	ldi	r18, 0x00	; 0
 920:	20 32       	cpi	r18, 0x20	; 32
 922:	a0 f4       	brcc	.+40     	; 0x94c <__stack+0x4d>
 924:	8b 32       	cpi	r24, 0x2B	; 43
 926:	69 f0       	breq	.+26     	; 0x942 <__stack+0x43>
 928:	30 f4       	brcc	.+12     	; 0x936 <__stack+0x37>
 92a:	80 32       	cpi	r24, 0x20	; 32
 92c:	59 f0       	breq	.+22     	; 0x944 <__stack+0x45>
 92e:	83 32       	cpi	r24, 0x23	; 35
 930:	69 f4       	brne	.+26     	; 0x94c <__stack+0x4d>
 932:	20 61       	ori	r18, 0x10	; 16
 934:	2c c0       	rjmp	.+88     	; 0x98e <__stack+0x8f>
 936:	8d 32       	cpi	r24, 0x2D	; 45
 938:	39 f0       	breq	.+14     	; 0x948 <__stack+0x49>
 93a:	80 33       	cpi	r24, 0x30	; 48
 93c:	39 f4       	brne	.+14     	; 0x94c <__stack+0x4d>
 93e:	21 60       	ori	r18, 0x01	; 1
 940:	26 c0       	rjmp	.+76     	; 0x98e <__stack+0x8f>
 942:	22 60       	ori	r18, 0x02	; 2
 944:	24 60       	ori	r18, 0x04	; 4
 946:	23 c0       	rjmp	.+70     	; 0x98e <__stack+0x8f>
 948:	28 60       	ori	r18, 0x08	; 8
 94a:	21 c0       	rjmp	.+66     	; 0x98e <__stack+0x8f>
 94c:	27 fd       	sbrc	r18, 7
 94e:	27 c0       	rjmp	.+78     	; 0x99e <__stack+0x9f>
 950:	30 ed       	ldi	r19, 0xD0	; 208
 952:	38 0f       	add	r19, r24
 954:	3a 30       	cpi	r19, 0x0A	; 10
 956:	78 f4       	brcc	.+30     	; 0x976 <__stack+0x77>
 958:	26 ff       	sbrs	r18, 6
 95a:	06 c0       	rjmp	.+12     	; 0x968 <__stack+0x69>
 95c:	fa e0       	ldi	r31, 0x0A	; 10
 95e:	5f 9e       	mul	r5, r31
 960:	30 0d       	add	r19, r0
 962:	11 24       	eor	r1, r1
 964:	53 2e       	mov	r5, r19
 966:	13 c0       	rjmp	.+38     	; 0x98e <__stack+0x8f>
 968:	8a e0       	ldi	r24, 0x0A	; 10
 96a:	38 9e       	mul	r3, r24
 96c:	30 0d       	add	r19, r0
 96e:	11 24       	eor	r1, r1
 970:	33 2e       	mov	r3, r19
 972:	20 62       	ori	r18, 0x20	; 32
 974:	0c c0       	rjmp	.+24     	; 0x98e <__stack+0x8f>
 976:	8e 32       	cpi	r24, 0x2E	; 46
 978:	21 f4       	brne	.+8      	; 0x982 <__stack+0x83>
 97a:	26 fd       	sbrc	r18, 6
 97c:	6b c1       	rjmp	.+726    	; 0xc54 <__stack+0x355>
 97e:	20 64       	ori	r18, 0x40	; 64
 980:	06 c0       	rjmp	.+12     	; 0x98e <__stack+0x8f>
 982:	8c 36       	cpi	r24, 0x6C	; 108
 984:	11 f4       	brne	.+4      	; 0x98a <__stack+0x8b>
 986:	20 68       	ori	r18, 0x80	; 128
 988:	02 c0       	rjmp	.+4      	; 0x98e <__stack+0x8f>
 98a:	88 36       	cpi	r24, 0x68	; 104
 98c:	41 f4       	brne	.+16     	; 0x99e <__stack+0x9f>
 98e:	f6 01       	movw	r30, r12
 990:	93 fd       	sbrc	r25, 3
 992:	85 91       	lpm	r24, Z+
 994:	93 ff       	sbrs	r25, 3
 996:	81 91       	ld	r24, Z+
 998:	6f 01       	movw	r12, r30
 99a:	81 11       	cpse	r24, r1
 99c:	c1 cf       	rjmp	.-126    	; 0x920 <__stack+0x21>
 99e:	98 2f       	mov	r25, r24
 9a0:	9f 7d       	andi	r25, 0xDF	; 223
 9a2:	95 54       	subi	r25, 0x45	; 69
 9a4:	93 30       	cpi	r25, 0x03	; 3
 9a6:	28 f4       	brcc	.+10     	; 0x9b2 <__stack+0xb3>
 9a8:	0c 5f       	subi	r16, 0xFC	; 252
 9aa:	1f 4f       	sbci	r17, 0xFF	; 255
 9ac:	ff e3       	ldi	r31, 0x3F	; 63
 9ae:	f9 83       	std	Y+1, r31	; 0x01
 9b0:	0d c0       	rjmp	.+26     	; 0x9cc <__stack+0xcd>
 9b2:	83 36       	cpi	r24, 0x63	; 99
 9b4:	31 f0       	breq	.+12     	; 0x9c2 <__stack+0xc3>
 9b6:	83 37       	cpi	r24, 0x73	; 115
 9b8:	71 f0       	breq	.+28     	; 0x9d6 <__stack+0xd7>
 9ba:	83 35       	cpi	r24, 0x53	; 83
 9bc:	09 f0       	breq	.+2      	; 0x9c0 <__stack+0xc1>
 9be:	5b c0       	rjmp	.+182    	; 0xa76 <__stack+0x177>
 9c0:	22 c0       	rjmp	.+68     	; 0xa06 <__stack+0x107>
 9c2:	f8 01       	movw	r30, r16
 9c4:	80 81       	ld	r24, Z
 9c6:	89 83       	std	Y+1, r24	; 0x01
 9c8:	0e 5f       	subi	r16, 0xFE	; 254
 9ca:	1f 4f       	sbci	r17, 0xFF	; 255
 9cc:	44 24       	eor	r4, r4
 9ce:	43 94       	inc	r4
 9d0:	51 2c       	mov	r5, r1
 9d2:	54 01       	movw	r10, r8
 9d4:	15 c0       	rjmp	.+42     	; 0xa00 <__stack+0x101>
 9d6:	38 01       	movw	r6, r16
 9d8:	f2 e0       	ldi	r31, 0x02	; 2
 9da:	6f 0e       	add	r6, r31
 9dc:	71 1c       	adc	r7, r1
 9de:	f8 01       	movw	r30, r16
 9e0:	a0 80       	ld	r10, Z
 9e2:	b1 80       	ldd	r11, Z+1	; 0x01
 9e4:	26 ff       	sbrs	r18, 6
 9e6:	03 c0       	rjmp	.+6      	; 0x9ee <__stack+0xef>
 9e8:	65 2d       	mov	r22, r5
 9ea:	70 e0       	ldi	r23, 0x00	; 0
 9ec:	02 c0       	rjmp	.+4      	; 0x9f2 <__stack+0xf3>
 9ee:	6f ef       	ldi	r22, 0xFF	; 255
 9f0:	7f ef       	ldi	r23, 0xFF	; 255
 9f2:	c5 01       	movw	r24, r10
 9f4:	2c 87       	std	Y+12, r18	; 0x0c
 9f6:	0e 94 3f 06 	call	0xc7e	; 0xc7e <strnlen>
 9fa:	2c 01       	movw	r4, r24
 9fc:	83 01       	movw	r16, r6
 9fe:	2c 85       	ldd	r18, Y+12	; 0x0c
 a00:	2f 77       	andi	r18, 0x7F	; 127
 a02:	22 2e       	mov	r2, r18
 a04:	17 c0       	rjmp	.+46     	; 0xa34 <__stack+0x135>
 a06:	38 01       	movw	r6, r16
 a08:	f2 e0       	ldi	r31, 0x02	; 2
 a0a:	6f 0e       	add	r6, r31
 a0c:	71 1c       	adc	r7, r1
 a0e:	f8 01       	movw	r30, r16
 a10:	a0 80       	ld	r10, Z
 a12:	b1 80       	ldd	r11, Z+1	; 0x01
 a14:	26 ff       	sbrs	r18, 6
 a16:	03 c0       	rjmp	.+6      	; 0xa1e <__stack+0x11f>
 a18:	65 2d       	mov	r22, r5
 a1a:	70 e0       	ldi	r23, 0x00	; 0
 a1c:	02 c0       	rjmp	.+4      	; 0xa22 <__stack+0x123>
 a1e:	6f ef       	ldi	r22, 0xFF	; 255
 a20:	7f ef       	ldi	r23, 0xFF	; 255
 a22:	c5 01       	movw	r24, r10
 a24:	2c 87       	std	Y+12, r18	; 0x0c
 a26:	0e 94 34 06 	call	0xc68	; 0xc68 <strnlen_P>
 a2a:	2c 01       	movw	r4, r24
 a2c:	2c 85       	ldd	r18, Y+12	; 0x0c
 a2e:	20 68       	ori	r18, 0x80	; 128
 a30:	22 2e       	mov	r2, r18
 a32:	83 01       	movw	r16, r6
 a34:	23 fc       	sbrc	r2, 3
 a36:	1b c0       	rjmp	.+54     	; 0xa6e <__stack+0x16f>
 a38:	83 2d       	mov	r24, r3
 a3a:	90 e0       	ldi	r25, 0x00	; 0
 a3c:	48 16       	cp	r4, r24
 a3e:	59 06       	cpc	r5, r25
 a40:	b0 f4       	brcc	.+44     	; 0xa6e <__stack+0x16f>
 a42:	b7 01       	movw	r22, r14
 a44:	80 e2       	ldi	r24, 0x20	; 32
 a46:	90 e0       	ldi	r25, 0x00	; 0
 a48:	0e 94 4a 06 	call	0xc94	; 0xc94 <fputc>
 a4c:	3a 94       	dec	r3
 a4e:	f4 cf       	rjmp	.-24     	; 0xa38 <__stack+0x139>
 a50:	f5 01       	movw	r30, r10
 a52:	27 fc       	sbrc	r2, 7
 a54:	85 91       	lpm	r24, Z+
 a56:	27 fe       	sbrs	r2, 7
 a58:	81 91       	ld	r24, Z+
 a5a:	5f 01       	movw	r10, r30
 a5c:	b7 01       	movw	r22, r14
 a5e:	90 e0       	ldi	r25, 0x00	; 0
 a60:	0e 94 4a 06 	call	0xc94	; 0xc94 <fputc>
 a64:	31 10       	cpse	r3, r1
 a66:	3a 94       	dec	r3
 a68:	f1 e0       	ldi	r31, 0x01	; 1
 a6a:	4f 1a       	sub	r4, r31
 a6c:	51 08       	sbc	r5, r1
 a6e:	41 14       	cp	r4, r1
 a70:	51 04       	cpc	r5, r1
 a72:	71 f7       	brne	.-36     	; 0xa50 <__stack+0x151>
 a74:	e5 c0       	rjmp	.+458    	; 0xc40 <__stack+0x341>
 a76:	84 36       	cpi	r24, 0x64	; 100
 a78:	11 f0       	breq	.+4      	; 0xa7e <__stack+0x17f>
 a7a:	89 36       	cpi	r24, 0x69	; 105
 a7c:	39 f5       	brne	.+78     	; 0xacc <__stack+0x1cd>
 a7e:	f8 01       	movw	r30, r16
 a80:	27 ff       	sbrs	r18, 7
 a82:	07 c0       	rjmp	.+14     	; 0xa92 <__stack+0x193>
 a84:	60 81       	ld	r22, Z
 a86:	71 81       	ldd	r23, Z+1	; 0x01
 a88:	82 81       	ldd	r24, Z+2	; 0x02
 a8a:	93 81       	ldd	r25, Z+3	; 0x03
 a8c:	0c 5f       	subi	r16, 0xFC	; 252
 a8e:	1f 4f       	sbci	r17, 0xFF	; 255
 a90:	08 c0       	rjmp	.+16     	; 0xaa2 <__stack+0x1a3>
 a92:	60 81       	ld	r22, Z
 a94:	71 81       	ldd	r23, Z+1	; 0x01
 a96:	07 2e       	mov	r0, r23
 a98:	00 0c       	add	r0, r0
 a9a:	88 0b       	sbc	r24, r24
 a9c:	99 0b       	sbc	r25, r25
 a9e:	0e 5f       	subi	r16, 0xFE	; 254
 aa0:	1f 4f       	sbci	r17, 0xFF	; 255
 aa2:	2f 76       	andi	r18, 0x6F	; 111
 aa4:	72 2e       	mov	r7, r18
 aa6:	97 ff       	sbrs	r25, 7
 aa8:	09 c0       	rjmp	.+18     	; 0xabc <__stack+0x1bd>
 aaa:	90 95       	com	r25
 aac:	80 95       	com	r24
 aae:	70 95       	com	r23
 ab0:	61 95       	neg	r22
 ab2:	7f 4f       	sbci	r23, 0xFF	; 255
 ab4:	8f 4f       	sbci	r24, 0xFF	; 255
 ab6:	9f 4f       	sbci	r25, 0xFF	; 255
 ab8:	20 68       	ori	r18, 0x80	; 128
 aba:	72 2e       	mov	r7, r18
 abc:	2a e0       	ldi	r18, 0x0A	; 10
 abe:	30 e0       	ldi	r19, 0x00	; 0
 ac0:	a4 01       	movw	r20, r8
 ac2:	0e 94 82 06 	call	0xd04	; 0xd04 <__ultoa_invert>
 ac6:	a8 2e       	mov	r10, r24
 ac8:	a8 18       	sub	r10, r8
 aca:	44 c0       	rjmp	.+136    	; 0xb54 <__stack+0x255>
 acc:	85 37       	cpi	r24, 0x75	; 117
 ace:	29 f4       	brne	.+10     	; 0xada <__stack+0x1db>
 ad0:	2f 7e       	andi	r18, 0xEF	; 239
 ad2:	b2 2e       	mov	r11, r18
 ad4:	2a e0       	ldi	r18, 0x0A	; 10
 ad6:	30 e0       	ldi	r19, 0x00	; 0
 ad8:	25 c0       	rjmp	.+74     	; 0xb24 <__stack+0x225>
 ada:	f2 2f       	mov	r31, r18
 adc:	f9 7f       	andi	r31, 0xF9	; 249
 ade:	bf 2e       	mov	r11, r31
 ae0:	8f 36       	cpi	r24, 0x6F	; 111
 ae2:	c1 f0       	breq	.+48     	; 0xb14 <__stack+0x215>
 ae4:	18 f4       	brcc	.+6      	; 0xaec <__stack+0x1ed>
 ae6:	88 35       	cpi	r24, 0x58	; 88
 ae8:	79 f0       	breq	.+30     	; 0xb08 <__stack+0x209>
 aea:	b4 c0       	rjmp	.+360    	; 0xc54 <__stack+0x355>
 aec:	80 37       	cpi	r24, 0x70	; 112
 aee:	19 f0       	breq	.+6      	; 0xaf6 <__stack+0x1f7>
 af0:	88 37       	cpi	r24, 0x78	; 120
 af2:	21 f0       	breq	.+8      	; 0xafc <__stack+0x1fd>
 af4:	af c0       	rjmp	.+350    	; 0xc54 <__stack+0x355>
 af6:	2f 2f       	mov	r18, r31
 af8:	20 61       	ori	r18, 0x10	; 16
 afa:	b2 2e       	mov	r11, r18
 afc:	b4 fe       	sbrs	r11, 4
 afe:	0d c0       	rjmp	.+26     	; 0xb1a <__stack+0x21b>
 b00:	8b 2d       	mov	r24, r11
 b02:	84 60       	ori	r24, 0x04	; 4
 b04:	b8 2e       	mov	r11, r24
 b06:	09 c0       	rjmp	.+18     	; 0xb1a <__stack+0x21b>
 b08:	24 ff       	sbrs	r18, 4
 b0a:	0a c0       	rjmp	.+20     	; 0xb20 <__stack+0x221>
 b0c:	9f 2f       	mov	r25, r31
 b0e:	96 60       	ori	r25, 0x06	; 6
 b10:	b9 2e       	mov	r11, r25
 b12:	06 c0       	rjmp	.+12     	; 0xb20 <__stack+0x221>
 b14:	28 e0       	ldi	r18, 0x08	; 8
 b16:	30 e0       	ldi	r19, 0x00	; 0
 b18:	05 c0       	rjmp	.+10     	; 0xb24 <__stack+0x225>
 b1a:	20 e1       	ldi	r18, 0x10	; 16
 b1c:	30 e0       	ldi	r19, 0x00	; 0
 b1e:	02 c0       	rjmp	.+4      	; 0xb24 <__stack+0x225>
 b20:	20 e1       	ldi	r18, 0x10	; 16
 b22:	32 e0       	ldi	r19, 0x02	; 2
 b24:	f8 01       	movw	r30, r16
 b26:	b7 fe       	sbrs	r11, 7
 b28:	07 c0       	rjmp	.+14     	; 0xb38 <__stack+0x239>
 b2a:	60 81       	ld	r22, Z
 b2c:	71 81       	ldd	r23, Z+1	; 0x01
 b2e:	82 81       	ldd	r24, Z+2	; 0x02
 b30:	93 81       	ldd	r25, Z+3	; 0x03
 b32:	0c 5f       	subi	r16, 0xFC	; 252
 b34:	1f 4f       	sbci	r17, 0xFF	; 255
 b36:	06 c0       	rjmp	.+12     	; 0xb44 <__stack+0x245>
 b38:	60 81       	ld	r22, Z
 b3a:	71 81       	ldd	r23, Z+1	; 0x01
 b3c:	80 e0       	ldi	r24, 0x00	; 0
 b3e:	90 e0       	ldi	r25, 0x00	; 0
 b40:	0e 5f       	subi	r16, 0xFE	; 254
 b42:	1f 4f       	sbci	r17, 0xFF	; 255
 b44:	a4 01       	movw	r20, r8
 b46:	0e 94 82 06 	call	0xd04	; 0xd04 <__ultoa_invert>
 b4a:	a8 2e       	mov	r10, r24
 b4c:	a8 18       	sub	r10, r8
 b4e:	fb 2d       	mov	r31, r11
 b50:	ff 77       	andi	r31, 0x7F	; 127
 b52:	7f 2e       	mov	r7, r31
 b54:	76 fe       	sbrs	r7, 6
 b56:	0b c0       	rjmp	.+22     	; 0xb6e <__stack+0x26f>
 b58:	37 2d       	mov	r19, r7
 b5a:	3e 7f       	andi	r19, 0xFE	; 254
 b5c:	a5 14       	cp	r10, r5
 b5e:	50 f4       	brcc	.+20     	; 0xb74 <__stack+0x275>
 b60:	74 fe       	sbrs	r7, 4
 b62:	0a c0       	rjmp	.+20     	; 0xb78 <__stack+0x279>
 b64:	72 fc       	sbrc	r7, 2
 b66:	08 c0       	rjmp	.+16     	; 0xb78 <__stack+0x279>
 b68:	37 2d       	mov	r19, r7
 b6a:	3e 7e       	andi	r19, 0xEE	; 238
 b6c:	05 c0       	rjmp	.+10     	; 0xb78 <__stack+0x279>
 b6e:	ba 2c       	mov	r11, r10
 b70:	37 2d       	mov	r19, r7
 b72:	03 c0       	rjmp	.+6      	; 0xb7a <__stack+0x27b>
 b74:	ba 2c       	mov	r11, r10
 b76:	01 c0       	rjmp	.+2      	; 0xb7a <__stack+0x27b>
 b78:	b5 2c       	mov	r11, r5
 b7a:	34 ff       	sbrs	r19, 4
 b7c:	0d c0       	rjmp	.+26     	; 0xb98 <__stack+0x299>
 b7e:	fe 01       	movw	r30, r28
 b80:	ea 0d       	add	r30, r10
 b82:	f1 1d       	adc	r31, r1
 b84:	80 81       	ld	r24, Z
 b86:	80 33       	cpi	r24, 0x30	; 48
 b88:	11 f4       	brne	.+4      	; 0xb8e <__stack+0x28f>
 b8a:	39 7e       	andi	r19, 0xE9	; 233
 b8c:	09 c0       	rjmp	.+18     	; 0xba0 <__stack+0x2a1>
 b8e:	32 ff       	sbrs	r19, 2
 b90:	06 c0       	rjmp	.+12     	; 0xb9e <__stack+0x29f>
 b92:	b3 94       	inc	r11
 b94:	b3 94       	inc	r11
 b96:	04 c0       	rjmp	.+8      	; 0xba0 <__stack+0x2a1>
 b98:	83 2f       	mov	r24, r19
 b9a:	86 78       	andi	r24, 0x86	; 134
 b9c:	09 f0       	breq	.+2      	; 0xba0 <__stack+0x2a1>
 b9e:	b3 94       	inc	r11
 ba0:	33 fd       	sbrc	r19, 3
 ba2:	13 c0       	rjmp	.+38     	; 0xbca <__stack+0x2cb>
 ba4:	30 ff       	sbrs	r19, 0
 ba6:	06 c0       	rjmp	.+12     	; 0xbb4 <__stack+0x2b5>
 ba8:	5a 2c       	mov	r5, r10
 baa:	b3 14       	cp	r11, r3
 bac:	18 f4       	brcc	.+6      	; 0xbb4 <__stack+0x2b5>
 bae:	53 0c       	add	r5, r3
 bb0:	5b 18       	sub	r5, r11
 bb2:	b3 2c       	mov	r11, r3
 bb4:	b3 14       	cp	r11, r3
 bb6:	68 f4       	brcc	.+26     	; 0xbd2 <__stack+0x2d3>
 bb8:	b7 01       	movw	r22, r14
 bba:	80 e2       	ldi	r24, 0x20	; 32
 bbc:	90 e0       	ldi	r25, 0x00	; 0
 bbe:	3c 87       	std	Y+12, r19	; 0x0c
 bc0:	0e 94 4a 06 	call	0xc94	; 0xc94 <fputc>
 bc4:	b3 94       	inc	r11
 bc6:	3c 85       	ldd	r19, Y+12	; 0x0c
 bc8:	f5 cf       	rjmp	.-22     	; 0xbb4 <__stack+0x2b5>
 bca:	b3 14       	cp	r11, r3
 bcc:	10 f4       	brcc	.+4      	; 0xbd2 <__stack+0x2d3>
 bce:	3b 18       	sub	r3, r11
 bd0:	01 c0       	rjmp	.+2      	; 0xbd4 <__stack+0x2d5>
 bd2:	31 2c       	mov	r3, r1
 bd4:	34 ff       	sbrs	r19, 4
 bd6:	12 c0       	rjmp	.+36     	; 0xbfc <__stack+0x2fd>
 bd8:	b7 01       	movw	r22, r14
 bda:	80 e3       	ldi	r24, 0x30	; 48
 bdc:	90 e0       	ldi	r25, 0x00	; 0
 bde:	3c 87       	std	Y+12, r19	; 0x0c
 be0:	0e 94 4a 06 	call	0xc94	; 0xc94 <fputc>
 be4:	3c 85       	ldd	r19, Y+12	; 0x0c
 be6:	32 ff       	sbrs	r19, 2
 be8:	17 c0       	rjmp	.+46     	; 0xc18 <__stack+0x319>
 bea:	31 fd       	sbrc	r19, 1
 bec:	03 c0       	rjmp	.+6      	; 0xbf4 <__stack+0x2f5>
 bee:	88 e7       	ldi	r24, 0x78	; 120
 bf0:	90 e0       	ldi	r25, 0x00	; 0
 bf2:	02 c0       	rjmp	.+4      	; 0xbf8 <__stack+0x2f9>
 bf4:	88 e5       	ldi	r24, 0x58	; 88
 bf6:	90 e0       	ldi	r25, 0x00	; 0
 bf8:	b7 01       	movw	r22, r14
 bfa:	0c c0       	rjmp	.+24     	; 0xc14 <__stack+0x315>
 bfc:	83 2f       	mov	r24, r19
 bfe:	86 78       	andi	r24, 0x86	; 134
 c00:	59 f0       	breq	.+22     	; 0xc18 <__stack+0x319>
 c02:	31 ff       	sbrs	r19, 1
 c04:	02 c0       	rjmp	.+4      	; 0xc0a <__stack+0x30b>
 c06:	8b e2       	ldi	r24, 0x2B	; 43
 c08:	01 c0       	rjmp	.+2      	; 0xc0c <__stack+0x30d>
 c0a:	80 e2       	ldi	r24, 0x20	; 32
 c0c:	37 fd       	sbrc	r19, 7
 c0e:	8d e2       	ldi	r24, 0x2D	; 45
 c10:	b7 01       	movw	r22, r14
 c12:	90 e0       	ldi	r25, 0x00	; 0
 c14:	0e 94 4a 06 	call	0xc94	; 0xc94 <fputc>
 c18:	a5 14       	cp	r10, r5
 c1a:	38 f4       	brcc	.+14     	; 0xc2a <__stack+0x32b>
 c1c:	b7 01       	movw	r22, r14
 c1e:	80 e3       	ldi	r24, 0x30	; 48
 c20:	90 e0       	ldi	r25, 0x00	; 0
 c22:	0e 94 4a 06 	call	0xc94	; 0xc94 <fputc>
 c26:	5a 94       	dec	r5
 c28:	f7 cf       	rjmp	.-18     	; 0xc18 <__stack+0x319>
 c2a:	aa 94       	dec	r10
 c2c:	f4 01       	movw	r30, r8
 c2e:	ea 0d       	add	r30, r10
 c30:	f1 1d       	adc	r31, r1
 c32:	80 81       	ld	r24, Z
 c34:	b7 01       	movw	r22, r14
 c36:	90 e0       	ldi	r25, 0x00	; 0
 c38:	0e 94 4a 06 	call	0xc94	; 0xc94 <fputc>
 c3c:	a1 10       	cpse	r10, r1
 c3e:	f5 cf       	rjmp	.-22     	; 0xc2a <__stack+0x32b>
 c40:	33 20       	and	r3, r3
 c42:	09 f4       	brne	.+2      	; 0xc46 <__stack+0x347>
 c44:	51 ce       	rjmp	.-862    	; 0x8e8 <vfprintf+0x24>
 c46:	b7 01       	movw	r22, r14
 c48:	80 e2       	ldi	r24, 0x20	; 32
 c4a:	90 e0       	ldi	r25, 0x00	; 0
 c4c:	0e 94 4a 06 	call	0xc94	; 0xc94 <fputc>
 c50:	3a 94       	dec	r3
 c52:	f6 cf       	rjmp	.-20     	; 0xc40 <__stack+0x341>
 c54:	f7 01       	movw	r30, r14
 c56:	86 81       	ldd	r24, Z+6	; 0x06
 c58:	97 81       	ldd	r25, Z+7	; 0x07
 c5a:	02 c0       	rjmp	.+4      	; 0xc60 <__stack+0x361>
 c5c:	8f ef       	ldi	r24, 0xFF	; 255
 c5e:	9f ef       	ldi	r25, 0xFF	; 255
 c60:	2c 96       	adiw	r28, 0x0c	; 12
 c62:	e2 e1       	ldi	r30, 0x12	; 18
 c64:	0c 94 fc 06 	jmp	0xdf8	; 0xdf8 <__epilogue_restores__>

00000c68 <strnlen_P>:
 c68:	fc 01       	movw	r30, r24
 c6a:	05 90       	lpm	r0, Z+
 c6c:	61 50       	subi	r22, 0x01	; 1
 c6e:	70 40       	sbci	r23, 0x00	; 0
 c70:	01 10       	cpse	r0, r1
 c72:	d8 f7       	brcc	.-10     	; 0xc6a <strnlen_P+0x2>
 c74:	80 95       	com	r24
 c76:	90 95       	com	r25
 c78:	8e 0f       	add	r24, r30
 c7a:	9f 1f       	adc	r25, r31
 c7c:	08 95       	ret

00000c7e <strnlen>:
 c7e:	fc 01       	movw	r30, r24
 c80:	61 50       	subi	r22, 0x01	; 1
 c82:	70 40       	sbci	r23, 0x00	; 0
 c84:	01 90       	ld	r0, Z+
 c86:	01 10       	cpse	r0, r1
 c88:	d8 f7       	brcc	.-10     	; 0xc80 <strnlen+0x2>
 c8a:	80 95       	com	r24
 c8c:	90 95       	com	r25
 c8e:	8e 0f       	add	r24, r30
 c90:	9f 1f       	adc	r25, r31
 c92:	08 95       	ret

00000c94 <fputc>:
 c94:	0f 93       	push	r16
 c96:	1f 93       	push	r17
 c98:	cf 93       	push	r28
 c9a:	df 93       	push	r29
 c9c:	fb 01       	movw	r30, r22
 c9e:	23 81       	ldd	r18, Z+3	; 0x03
 ca0:	21 fd       	sbrc	r18, 1
 ca2:	03 c0       	rjmp	.+6      	; 0xcaa <fputc+0x16>
 ca4:	8f ef       	ldi	r24, 0xFF	; 255
 ca6:	9f ef       	ldi	r25, 0xFF	; 255
 ca8:	28 c0       	rjmp	.+80     	; 0xcfa <fputc+0x66>
 caa:	22 ff       	sbrs	r18, 2
 cac:	16 c0       	rjmp	.+44     	; 0xcda <fputc+0x46>
 cae:	46 81       	ldd	r20, Z+6	; 0x06
 cb0:	57 81       	ldd	r21, Z+7	; 0x07
 cb2:	24 81       	ldd	r18, Z+4	; 0x04
 cb4:	35 81       	ldd	r19, Z+5	; 0x05
 cb6:	42 17       	cp	r20, r18
 cb8:	53 07       	cpc	r21, r19
 cba:	44 f4       	brge	.+16     	; 0xccc <fputc+0x38>
 cbc:	a0 81       	ld	r26, Z
 cbe:	b1 81       	ldd	r27, Z+1	; 0x01
 cc0:	9d 01       	movw	r18, r26
 cc2:	2f 5f       	subi	r18, 0xFF	; 255
 cc4:	3f 4f       	sbci	r19, 0xFF	; 255
 cc6:	31 83       	std	Z+1, r19	; 0x01
 cc8:	20 83       	st	Z, r18
 cca:	8c 93       	st	X, r24
 ccc:	26 81       	ldd	r18, Z+6	; 0x06
 cce:	37 81       	ldd	r19, Z+7	; 0x07
 cd0:	2f 5f       	subi	r18, 0xFF	; 255
 cd2:	3f 4f       	sbci	r19, 0xFF	; 255
 cd4:	37 83       	std	Z+7, r19	; 0x07
 cd6:	26 83       	std	Z+6, r18	; 0x06
 cd8:	10 c0       	rjmp	.+32     	; 0xcfa <fputc+0x66>
 cda:	eb 01       	movw	r28, r22
 cdc:	09 2f       	mov	r16, r25
 cde:	18 2f       	mov	r17, r24
 ce0:	00 84       	ldd	r0, Z+8	; 0x08
 ce2:	f1 85       	ldd	r31, Z+9	; 0x09
 ce4:	e0 2d       	mov	r30, r0
 ce6:	09 95       	icall
 ce8:	89 2b       	or	r24, r25
 cea:	e1 f6       	brne	.-72     	; 0xca4 <fputc+0x10>
 cec:	8e 81       	ldd	r24, Y+6	; 0x06
 cee:	9f 81       	ldd	r25, Y+7	; 0x07
 cf0:	01 96       	adiw	r24, 0x01	; 1
 cf2:	9f 83       	std	Y+7, r25	; 0x07
 cf4:	8e 83       	std	Y+6, r24	; 0x06
 cf6:	81 2f       	mov	r24, r17
 cf8:	90 2f       	mov	r25, r16
 cfa:	df 91       	pop	r29
 cfc:	cf 91       	pop	r28
 cfe:	1f 91       	pop	r17
 d00:	0f 91       	pop	r16
 d02:	08 95       	ret

00000d04 <__ultoa_invert>:
 d04:	fa 01       	movw	r30, r20
 d06:	aa 27       	eor	r26, r26
 d08:	28 30       	cpi	r18, 0x08	; 8
 d0a:	51 f1       	breq	.+84     	; 0xd60 <__ultoa_invert+0x5c>
 d0c:	20 31       	cpi	r18, 0x10	; 16
 d0e:	81 f1       	breq	.+96     	; 0xd70 <__ultoa_invert+0x6c>
 d10:	e8 94       	clt
 d12:	6f 93       	push	r22
 d14:	6e 7f       	andi	r22, 0xFE	; 254
 d16:	6e 5f       	subi	r22, 0xFE	; 254
 d18:	7f 4f       	sbci	r23, 0xFF	; 255
 d1a:	8f 4f       	sbci	r24, 0xFF	; 255
 d1c:	9f 4f       	sbci	r25, 0xFF	; 255
 d1e:	af 4f       	sbci	r26, 0xFF	; 255
 d20:	b1 e0       	ldi	r27, 0x01	; 1
 d22:	3e d0       	rcall	.+124    	; 0xda0 <__ultoa_invert+0x9c>
 d24:	b4 e0       	ldi	r27, 0x04	; 4
 d26:	3c d0       	rcall	.+120    	; 0xda0 <__ultoa_invert+0x9c>
 d28:	67 0f       	add	r22, r23
 d2a:	78 1f       	adc	r23, r24
 d2c:	89 1f       	adc	r24, r25
 d2e:	9a 1f       	adc	r25, r26
 d30:	a1 1d       	adc	r26, r1
 d32:	68 0f       	add	r22, r24
 d34:	79 1f       	adc	r23, r25
 d36:	8a 1f       	adc	r24, r26
 d38:	91 1d       	adc	r25, r1
 d3a:	a1 1d       	adc	r26, r1
 d3c:	6a 0f       	add	r22, r26
 d3e:	71 1d       	adc	r23, r1
 d40:	81 1d       	adc	r24, r1
 d42:	91 1d       	adc	r25, r1
 d44:	a1 1d       	adc	r26, r1
 d46:	20 d0       	rcall	.+64     	; 0xd88 <__ultoa_invert+0x84>
 d48:	09 f4       	brne	.+2      	; 0xd4c <__ultoa_invert+0x48>
 d4a:	68 94       	set
 d4c:	3f 91       	pop	r19
 d4e:	2a e0       	ldi	r18, 0x0A	; 10
 d50:	26 9f       	mul	r18, r22
 d52:	11 24       	eor	r1, r1
 d54:	30 19       	sub	r19, r0
 d56:	30 5d       	subi	r19, 0xD0	; 208
 d58:	31 93       	st	Z+, r19
 d5a:	de f6       	brtc	.-74     	; 0xd12 <__ultoa_invert+0xe>
 d5c:	cf 01       	movw	r24, r30
 d5e:	08 95       	ret
 d60:	46 2f       	mov	r20, r22
 d62:	47 70       	andi	r20, 0x07	; 7
 d64:	40 5d       	subi	r20, 0xD0	; 208
 d66:	41 93       	st	Z+, r20
 d68:	b3 e0       	ldi	r27, 0x03	; 3
 d6a:	0f d0       	rcall	.+30     	; 0xd8a <__ultoa_invert+0x86>
 d6c:	c9 f7       	brne	.-14     	; 0xd60 <__ultoa_invert+0x5c>
 d6e:	f6 cf       	rjmp	.-20     	; 0xd5c <__ultoa_invert+0x58>
 d70:	46 2f       	mov	r20, r22
 d72:	4f 70       	andi	r20, 0x0F	; 15
 d74:	40 5d       	subi	r20, 0xD0	; 208
 d76:	4a 33       	cpi	r20, 0x3A	; 58
 d78:	18 f0       	brcs	.+6      	; 0xd80 <__ultoa_invert+0x7c>
 d7a:	49 5d       	subi	r20, 0xD9	; 217
 d7c:	31 fd       	sbrc	r19, 1
 d7e:	40 52       	subi	r20, 0x20	; 32
 d80:	41 93       	st	Z+, r20
 d82:	02 d0       	rcall	.+4      	; 0xd88 <__ultoa_invert+0x84>
 d84:	a9 f7       	brne	.-22     	; 0xd70 <__ultoa_invert+0x6c>
 d86:	ea cf       	rjmp	.-44     	; 0xd5c <__ultoa_invert+0x58>
 d88:	b4 e0       	ldi	r27, 0x04	; 4
 d8a:	a6 95       	lsr	r26
 d8c:	97 95       	ror	r25
 d8e:	87 95       	ror	r24
 d90:	77 95       	ror	r23
 d92:	67 95       	ror	r22
 d94:	ba 95       	dec	r27
 d96:	c9 f7       	brne	.-14     	; 0xd8a <__ultoa_invert+0x86>
 d98:	00 97       	sbiw	r24, 0x00	; 0
 d9a:	61 05       	cpc	r22, r1
 d9c:	71 05       	cpc	r23, r1
 d9e:	08 95       	ret
 da0:	9b 01       	movw	r18, r22
 da2:	ac 01       	movw	r20, r24
 da4:	0a 2e       	mov	r0, r26
 da6:	06 94       	lsr	r0
 da8:	57 95       	ror	r21
 daa:	47 95       	ror	r20
 dac:	37 95       	ror	r19
 dae:	27 95       	ror	r18
 db0:	ba 95       	dec	r27
 db2:	c9 f7       	brne	.-14     	; 0xda6 <__ultoa_invert+0xa2>
 db4:	62 0f       	add	r22, r18
 db6:	73 1f       	adc	r23, r19
 db8:	84 1f       	adc	r24, r20
 dba:	95 1f       	adc	r25, r21
 dbc:	a0 1d       	adc	r26, r0
 dbe:	08 95       	ret

00000dc0 <__prologue_saves__>:
 dc0:	2f 92       	push	r2
 dc2:	3f 92       	push	r3
 dc4:	4f 92       	push	r4
 dc6:	5f 92       	push	r5
 dc8:	6f 92       	push	r6
 dca:	7f 92       	push	r7
 dcc:	8f 92       	push	r8
 dce:	9f 92       	push	r9
 dd0:	af 92       	push	r10
 dd2:	bf 92       	push	r11
 dd4:	cf 92       	push	r12
 dd6:	df 92       	push	r13
 dd8:	ef 92       	push	r14
 dda:	ff 92       	push	r15
 ddc:	0f 93       	push	r16
 dde:	1f 93       	push	r17
 de0:	cf 93       	push	r28
 de2:	df 93       	push	r29
 de4:	cd b7       	in	r28, 0x3d	; 61
 de6:	de b7       	in	r29, 0x3e	; 62
 de8:	ca 1b       	sub	r28, r26
 dea:	db 0b       	sbc	r29, r27
 dec:	0f b6       	in	r0, 0x3f	; 63
 dee:	f8 94       	cli
 df0:	de bf       	out	0x3e, r29	; 62
 df2:	0f be       	out	0x3f, r0	; 63
 df4:	cd bf       	out	0x3d, r28	; 61
 df6:	09 94       	ijmp

00000df8 <__epilogue_restores__>:
 df8:	2a 88       	ldd	r2, Y+18	; 0x12
 dfa:	39 88       	ldd	r3, Y+17	; 0x11
 dfc:	48 88       	ldd	r4, Y+16	; 0x10
 dfe:	5f 84       	ldd	r5, Y+15	; 0x0f
 e00:	6e 84       	ldd	r6, Y+14	; 0x0e
 e02:	7d 84       	ldd	r7, Y+13	; 0x0d
 e04:	8c 84       	ldd	r8, Y+12	; 0x0c
 e06:	9b 84       	ldd	r9, Y+11	; 0x0b
 e08:	aa 84       	ldd	r10, Y+10	; 0x0a
 e0a:	b9 84       	ldd	r11, Y+9	; 0x09
 e0c:	c8 84       	ldd	r12, Y+8	; 0x08
 e0e:	df 80       	ldd	r13, Y+7	; 0x07
 e10:	ee 80       	ldd	r14, Y+6	; 0x06
 e12:	fd 80       	ldd	r15, Y+5	; 0x05
 e14:	0c 81       	ldd	r16, Y+4	; 0x04
 e16:	1b 81       	ldd	r17, Y+3	; 0x03
 e18:	aa 81       	ldd	r26, Y+2	; 0x02
 e1a:	b9 81       	ldd	r27, Y+1	; 0x01
 e1c:	ce 0f       	add	r28, r30
 e1e:	d1 1d       	adc	r29, r1
 e20:	0f b6       	in	r0, 0x3f	; 63
 e22:	f8 94       	cli
 e24:	de bf       	out	0x3e, r29	; 62
 e26:	0f be       	out	0x3f, r0	; 63
 e28:	cd bf       	out	0x3d, r28	; 61
 e2a:	ed 01       	movw	r28, r26
 e2c:	08 95       	ret

00000e2e <_exit>:
 e2e:	f8 94       	cli

00000e30 <__stop_program>:
 e30:	ff cf       	rjmp	.-2      	; 0xe30 <__stop_program>
